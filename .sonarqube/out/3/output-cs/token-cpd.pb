ê
PC:\repositorio\TaskManagementSystem\src\Infra\Database\Config\DatabaseOptions.cs
	namespace 	
Infra
 
. 
Database 
. 
Config 
;  
public 
class 
DatabaseOptions 
{ 
public 
string 
MySqlConnection 
{  
get! $
;$ %
init& *
;* +
}, -
=. /
null0 4
!4 5
;5 6
} ª8
VC:\repositorio\TaskManagementSystem\src\Infra\Database\Context\ApplicationDbContext.cs
	namespace 	
Infra
 
. 
Database 
. 
Context  
;  !
public 
class  
ApplicationDbContext !
:" #
	DbContext$ -
{ 
public		 
 
ApplicationDbContext		 
(		  
DbContextOptions		  0
<		0 1 
ApplicationDbContext		1 E
>		E F
options		G N
)		N O
:

 	
base


 
(

 
options

 
)

 
{ 
} 
public 

DbSet 
< 
User 
> 
Users 
{ 
get "
;" #
set$ '
;' (
}) *
public 

DbSet 
< 
Category 
> 

Categories %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 

DbSet 
< 
Tasks 
> 
Tasks 
{ 
get  #
;# $
set% (
;( )
}* +
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
base 
. 
OnModelCreating 
( 
modelBuilder )
)) *
;* +
modelBuilder 
. 
Entity 
< 
User  
>  !
(! "
entity" (
=>) +
{ 	
entity 
. 
HasKey 
( 
e 
=> 
e  
.  !
Id! #
)# $
;$ %
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Name# '
)' (
. 

IsRequired 
( 
) 
. 
HasMaxLength 
(  
$num  #
)# $
;$ %
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Email# (
)( )
. 

IsRequired 
( 
) 
. 
HasMaxLength 
(  
$num  #
)# $
;$ %
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Password# +
)+ ,
.   

IsRequired   
(   
)   
.!! 
HasMaxLength!! 
(!!  
$num!!  #
)!!# $
;!!$ %
entity"" 
."" 
HasMany"" 
("" 
e"" 
=>"" 
e""  !
.""! "
Tasks""" '
)""' (
.## 
WithOne## 
(## 
e## 
=>## 
e##  !
.##! "
User##" &
)##& '
.$$ 
HasForeignKey$$  
($$  !
e$$! "
=>$$# %
e$$& '
.$$' (
UserId$$( .
)$$. /
;$$/ 0
}%% 	
)%%	 

;%%
 
modelBuilder(( 
.(( 
Entity(( 
<(( 
Category(( $
>(($ %
(((% &
entity((& ,
=>((- /
{)) 	
entity** 
.** 
HasKey** 
(** 
e** 
=>** 
e**  
.**  !
Id**! #
)**# $
;**$ %
entity++ 
.++ 
Property++ 
(++ 
e++ 
=>++  
e++! "
.++" #
Name++# '
)++' (
.,, 

IsRequired,, 
(,, 
),, 
.-- 
HasMaxLength-- 
(--  
$num--  #
)--# $
;--$ %
entity.. 
... 
HasMany.. 
(.. 
e.. 
=>.. 
e..  !
...! "
Tasks.." '
)..' (
.// 
WithOne// 
(// 
e// 
=>// 
e//  !
.//! "
Category//" *
)//* +
.00 
HasForeignKey00  
(00  !
e00! "
=>00# %
e00& '
.00' (

CategoryId00( 2
)002 3
;003 4
}11 	
)11	 

;11
 
modelBuilder44 
.44 
Entity44 
<44 
Tasks44 !
>44! "
(44" #
entity44# )
=>44* ,
{55 	
entity66 
.66 
HasKey66 
(66 
e66 
=>66 
e66  
.66  !
Id66! #
)66# $
;66$ %
entity77 
.77 
Property77 
(77 
e77 
=>77  
e77! "
.77" #
Title77# (
)77( )
.88 

IsRequired88 
(88 
)88 
.99 
HasMaxLength99 
(99  
$num99  #
)99# $
;99$ %
entity:: 
.:: 
Property:: 
(:: 
e:: 
=>::  
e::! "
.::" #
Description::# .
)::. /
.;; 
HasMaxLength;; 
(;;  
$num;;  $
);;$ %
;;;% &
entity<< 
.<< 
Property<< 
(<< 
e<< 
=><<  
e<<! "
.<<" #
DueDate<<# *
)<<* +
.== 

IsRequired== 
(== 
)== 
;==  
entity>> 
.>> 
Property>> 
(>> 
e>> 
=>>>  
e>>! "
.>>" #
IsCompleted>># .
)>>. /
.?? 

IsRequired?? 
(?? 
)?? 
;??  
entity@@ 
.@@ 
HasOne@@ 
(@@ 
e@@ 
=>@@ 
e@@  
.@@  !
User@@! %
)@@% &
.AA 
WithManyAA 
(AA 
eAA 
=>AA  
eAA! "
.AA" #
TasksAA# (
)AA( )
.BB 
HasForeignKeyBB  
(BB  !
eBB! "
=>BB# %
eBB& '
.BB' (
UserIdBB( .
)BB. /
;BB/ 0
entityCC 
.CC 
HasOneCC 
(CC 
eCC 
=>CC 
eCC  
.CC  !
CategoryCC! )
)CC) *
.DD 
WithManyDD 
(DD 
eDD 
=>DD  
eDD! "
.DD" #
TasksDD# (
)DD( )
.EE 
HasForeignKeyEE  
(EE  !
eEE! "
=>EE# %
eEE& '
.EE' (

CategoryIdEE( 2
)EE2 3
;EE3 4
}FF 	
)FF	 

;FF
 
}GG 
}HH î
]C:\repositorio\TaskManagementSystem\src\Infra\Database\Context\ApplicationDbContextFactory.cs
	namespace 	
Infra
 
. 
Database 
. 
Context  
;  !
public 
class '
ApplicationDbContextFactory (
:) *'
IDesignTimeDbContextFactory+ F
<F G 
ApplicationDbContextG [
>[ \
{ 
public  
ApplicationDbContext 
CreateDbContext ,
(, -
string- 3
[3 4
]4 5
args6 :
): ;
{		 
var

 
optionsBuilder

 
=

 
new

 #
DbContextOptionsBuilder

 2
<

2 3 
ApplicationDbContext

3 G
>

G H
(

H I
)

I J
;

J K
var 
connectionString 
= 
$str X
;X Y
optionsBuilder 
. 
UseMySql 
( 
connectionString 
, 
new 
MySqlServerVersion 
( 
ServerVersion 
. 

AutoDetect 
( 
connectionString -
)- .
) 
, 
options 

=> 
options 
. 
MigrationsAssembly (
(( )
$str) 0
)0 1
) 
; 
return 
new	  
ApplicationDbContext !
(! "
optionsBuilder" 0
.0 1
Options1 8
)8 9
;9 :
} 
} âÌ
[C:\repositorio\TaskManagementSystem\src\Infra\Database\Migrations\20231203143122_Initial.cs
	namespace		 	
Infra		
 
.		 
Database		 
.		 

Migrations		 #
{

 
public 

partial 
class 
Initial  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterDatabase *
(* +
)+ ,
. 

Annotation 
( 
$str +
,+ ,
$str- 6
)6 7
;7 8
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
Symbol 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 B
,B C
nullableD L
:L M
falseN S
)S T
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 @
,@ A
nullableB J
:J K
falseL Q
)Q R
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
AvailableQuantity %
=& '
table( -
.- .
Column. 4
<4 5
int5 8
>8 9
(9 :
type: >
:> ?
$str@ E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
Price 
= 
table !
.! "
Column" (
<( )
decimal) 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
falseS X
)X Y
}   
,   
constraints!! 
:!! 
table!! "
=>!!# %
{"" 
table## 
.## 

PrimaryKey## $
(##$ %
$str##% 0
,##0 1
x##2 3
=>##4 6
x##7 8
.##8 9
Id##9 ;
)##; <
;##< =
}$$ 
)$$ 
.%% 

Annotation%% 
(%% 
$str%% +
,%%+ ,
$str%%- 6
)%%6 7
;%%7 8
migrationBuilder'' 
.'' 
CreateTable'' (
(''( )
name(( 
:(( 
$str(( 
,((  
columns)) 
:)) 
table)) 
=>)) !
new))" %
{** 
Id++ 
=++ 
table++ 
.++ 
Column++ %
<++% &
string++& ,
>++, -
(++- .
type++. 2
:++2 3
$str++4 B
,++B C
nullable++D L
:++L M
false++N S
)++S T
.,, 

Annotation,, #
(,,# $
$str,,$ 3
,,,3 4
$str,,5 >
),,> ?
,,,? @
Name-- 
=-- 
table--  
.--  !
Column--! '
<--' (
string--( .
>--. /
(--/ 0
type--0 4
:--4 5
$str--6 @
,--@ A
nullable--B J
:--J K
false--L Q
)--Q R
... 

Annotation.. #
(..# $
$str..$ 3
,..3 4
$str..5 >
)..> ?
,..? @
Email// 
=// 
table// !
.//! "
Column//" (
<//( )
string//) /
>/// 0
(//0 1
type//1 5
://5 6
$str//7 E
,//E F
nullable//G O
://O P
false//Q V
)//V W
.00 

Annotation00 #
(00# $
$str00$ 3
,003 4
$str005 >
)00> ?
,00? @
Password11 
=11 
table11 $
.11$ %
Column11% +
<11+ ,
string11, 2
>112 3
(113 4
type114 8
:118 9
$str11: D
,11D E
nullable11F N
:11N O
false11P U
)11U V
.22 

Annotation22 #
(22# $
$str22$ 3
,223 4
$str225 >
)22> ?
}33 
,33 
constraints44 
:44 
table44 "
=>44# %
{55 
table66 
.66 

PrimaryKey66 $
(66$ %
$str66% 1
,661 2
x663 4
=>665 7
x668 9
.669 :
Id66: <
)66< =
;66= >
}77 
)77 
.88 

Annotation88 
(88 
$str88 +
,88+ ,
$str88- 6
)886 7
;887 8
migrationBuilder:: 
.:: 
CreateTable:: (
(::( )
name;; 
:;; 
$str;;  
,;;  !
columns<< 
:<< 
table<< 
=><< !
new<<" %
{== 
Id>> 
=>> 
table>> 
.>> 
Column>> %
<>>% &
string>>& ,
>>>, -
(>>- .
type>>. 2
:>>2 3
$str>>4 B
,>>B C
nullable>>D L
:>>L M
false>>N S
)>>S T
.?? 

Annotation?? #
(??# $
$str??$ 3
,??3 4
$str??5 >
)??> ?
,??? @
ClientId@@ 
=@@ 
table@@ $
.@@$ %
Column@@% +
<@@+ ,
string@@, 2
>@@2 3
(@@3 4
type@@4 8
:@@8 9
$str@@: H
,@@H I
nullable@@J R
:@@R S
false@@T Y
)@@Y Z
.AA 

AnnotationAA #
(AA# $
$strAA$ 3
,AA3 4
$strAA5 >
)AA> ?
,AA? @
BalanceBB 
=BB 
tableBB #
.BB# $
ColumnBB$ *
<BB* +
decimalBB+ 2
>BB2 3
(BB3 4
typeBB4 8
:BB8 9
$strBB: I
,BBI J
nullableBBK S
:BBS T
falseBBU Z
)BBZ [
,BB[ \
	UpdatedAtCC 
=CC 
tableCC  %
.CC% &
ColumnCC& ,
<CC, -
DateTimeCC- 5
>CC5 6
(CC6 7
typeCC7 ;
:CC; <
$strCC= J
,CCJ K
nullableCCL T
:CCT U
falseCCV [
)CC[ \
}DD 
,DD 
constraintsEE 
:EE 
tableEE "
=>EE# %
{FF 
tableGG 
.GG 

PrimaryKeyGG $
(GG$ %
$strGG% 2
,GG2 3
xGG4 5
=>GG6 8
xGG9 :
.GG: ;
IdGG; =
)GG= >
;GG> ?
tableHH 
.HH 

ForeignKeyHH $
(HH$ %
nameII 
:II 
$strII <
,II< =
columnJJ 
:JJ 
xJJ  !
=>JJ" $
xJJ% &
.JJ& '
ClientIdJJ' /
,JJ/ 0
principalTableKK &
:KK& '
$strKK( 1
,KK1 2
principalColumnLL '
:LL' (
$strLL) -
,LL- .
onDeleteMM  
:MM  !
ReferentialActionMM" 3
.MM3 4
CascadeMM4 ;
)MM; <
;MM< =
}NN 
)NN 
.OO 

AnnotationOO 
(OO 
$strOO +
,OO+ ,
$strOO- 6
)OO6 7
;OO7 8
migrationBuilderQQ 
.QQ 
CreateTableQQ (
(QQ( )
nameRR 
:RR 
$strRR *
,RR* +
columnsSS 
:SS 
tableSS 
=>SS !
newSS" %
{TT 
IdUU 
=UU 
tableUU 
.UU 
ColumnUU %
<UU% &
intUU& )
>UU) *
(UU* +
typeUU+ /
:UU/ 0
$strUU1 6
,UU6 7
nullableUU8 @
:UU@ A
falseUUB G
)UUG H
.VV 

AnnotationVV #
(VV# $
$strVV$ C
,VVC D(
MySqlValueGenerationStrategyVVE a
.VVa b
IdentityColumnVVb p
)VVp q
,VVq r
	AccountIdWW 
=WW 
tableWW  %
.WW% &
ColumnWW& ,
<WW, -
stringWW- 3
>WW3 4
(WW4 5
typeWW5 9
:WW9 :
$strWW; I
,WWI J
nullableWWK S
:WWS T
falseWWU Z
)WWZ [
.XX 

AnnotationXX #
(XX# $
$strXX$ 3
,XX3 4
$strXX5 >
)XX> ?
,XX? @
AssetIdYY 
=YY 
tableYY #
.YY# $
ColumnYY$ *
<YY* +
intYY+ .
>YY. /
(YY/ 0
typeYY0 4
:YY4 5
$strYY6 ;
,YY; <
nullableYY= E
:YYE F
falseYYG L
)YYL M
,YYM N
InvestmentTypeZZ "
=ZZ# $
tableZZ% *
.ZZ* +
ColumnZZ+ 1
<ZZ1 2
stringZZ2 8
>ZZ8 9
(ZZ9 :
typeZZ: >
:ZZ> ?
$strZZ@ J
,ZZJ K
nullableZZL T
:ZZT U
falseZZV [
)ZZ[ \
.[[ 

Annotation[[ #
([[# $
$str[[$ 3
,[[3 4
$str[[5 >
)[[> ?
,[[? @
Quantity\\ 
=\\ 
table\\ $
.\\$ %
Column\\% +
<\\+ ,
int\\, /
>\\/ 0
(\\0 1
type\\1 5
:\\5 6
$str\\7 <
,\\< =
nullable\\> F
:\\F G
false\\H M
)\\M N
,\\N O
Price]] 
=]] 
table]] !
.]]! "
Column]]" (
<]]( )
decimal]]) 0
>]]0 1
(]]1 2
type]]2 6
:]]6 7
$str]]8 G
,]]G H
nullable]]I Q
:]]Q R
false]]S X
)]]X Y
,]]Y Z
	CreatedAt^^ 
=^^ 
table^^  %
.^^% &
Column^^& ,
<^^, -
DateTime^^- 5
>^^5 6
(^^6 7
type^^7 ;
:^^; <
$str^^= J
,^^J K
nullable^^L T
:^^T U
false^^V [
)^^[ \
}__ 
,__ 
constraints`` 
:`` 
table`` "
=>``# %
{aa 
tablebb 
.bb 

PrimaryKeybb $
(bb$ %
$strbb% <
,bb< =
xbb> ?
=>bb@ B
xbbC D
.bbD E
IdbbE G
)bbG H
;bbH I
tablecc 
.cc 

ForeignKeycc $
(cc$ %
namedd 
:dd 
$strdd H
,ddH I
columnee 
:ee 
xee  !
=>ee" $
xee% &
.ee& '
	AccountIdee' 0
,ee0 1
principalTableff &
:ff& '
$strff( 2
,ff2 3
principalColumngg '
:gg' (
$strgg) -
,gg- .
onDeletehh  
:hh  !
ReferentialActionhh" 3
.hh3 4
Cascadehh4 ;
)hh; <
;hh< =
tableii 
.ii 

ForeignKeyii $
(ii$ %
namejj 
:jj 
$strjj D
,jjD E
columnkk 
:kk 
xkk  !
=>kk" $
xkk% &
.kk& '
AssetIdkk' .
,kk. /
principalTablell &
:ll& '
$strll( 0
,ll0 1
principalColumnmm '
:mm' (
$strmm) -
,mm- .
onDeletenn  
:nn  !
ReferentialActionnn" 3
.nn3 4
Cascadenn4 ;
)nn; <
;nn< =
}oo 
)oo 
.pp 

Annotationpp 
(pp 
$strpp +
,pp+ ,
$strpp- 6
)pp6 7
;pp7 8
migrationBuilderrr 
.rr 
CreateTablerr (
(rr( )
namess 
:ss 
$strss "
,ss" #
columnstt 
:tt 
tablett 
=>tt !
newtt" %
{uu 
Idvv 
=vv 
tablevv 
.vv 
Columnvv %
<vv% &
intvv& )
>vv) *
(vv* +
typevv+ /
:vv/ 0
$strvv1 6
,vv6 7
nullablevv8 @
:vv@ A
falsevvB G
)vvG H
.ww 

Annotationww #
(ww# $
$strww$ C
,wwC D(
MySqlValueGenerationStrategywwE a
.wwa b
IdentityColumnwwb p
)wwp q
,wwq r
AssetIdxx 
=xx 
tablexx #
.xx# $
Columnxx$ *
<xx* +
intxx+ .
>xx. /
(xx/ 0
typexx0 4
:xx4 5
$strxx6 ;
,xx; <
nullablexx= E
:xxE F
falsexxG L
)xxL M
,xxM N
	AccountIdyy 
=yy 
tableyy  %
.yy% &
Columnyy& ,
<yy, -
stringyy- 3
>yy3 4
(yy4 5
typeyy5 9
:yy9 :
$stryy; I
,yyI J
nullableyyK S
:yyS T
falseyyU Z
)yyZ [
.zz 

Annotationzz #
(zz# $
$strzz$ 3
,zz3 4
$strzz5 >
)zz> ?
,zz? @
Symbol{{ 
={{ 
table{{ "
.{{" #
Column{{# )
<{{) *
string{{* 0
>{{0 1
({{1 2
type{{2 6
:{{6 7
$str{{8 E
,{{E F
	maxLength{{G P
:{{P Q
$num{{R T
,{{T U
nullable{{V ^
:{{^ _
false{{` e
){{e f
.|| 

Annotation|| #
(||# $
$str||$ 3
,||3 4
$str||5 >
)||> ?
,||? @
Quantity}} 
=}} 
table}} $
.}}$ %
Column}}% +
<}}+ ,
int}}, /
>}}/ 0
(}}0 1
type}}1 5
:}}5 6
$str}}7 <
,}}< =
nullable}}> F
:}}F G
false}}H M
)}}M N
,}}N O 
AveragePurchasePrice~~ (
=~~) *
table~~+ 0
.~~0 1
Column~~1 7
<~~7 8
decimal~~8 ?
>~~? @
(~~@ A
type~~A E
:~~E F
$str~~G V
,~~V W
nullable~~X `
:~~` a
false~~b g
)~~g h
,~~h i
AcquisitionValue $
=% &
table' ,
., -
Column- 3
<3 4
decimal4 ;
>; <
(< =
type= A
:A B
$strC R
,R S
nullableT \
:\ ]
false^ c
)c d
,d e
CurrentValue
ÄÄ  
=
ÄÄ! "
table
ÄÄ# (
.
ÄÄ( )
Column
ÄÄ) /
<
ÄÄ/ 0
decimal
ÄÄ0 7
>
ÄÄ7 8
(
ÄÄ8 9
type
ÄÄ9 =
:
ÄÄ= >
$str
ÄÄ? N
,
ÄÄN O
nullable
ÄÄP X
:
ÄÄX Y
false
ÄÄZ _
)
ÄÄ_ `
,
ÄÄ` a%
ProfitabilityPercentage
ÅÅ +
=
ÅÅ, -
table
ÅÅ. 3
.
ÅÅ3 4
Column
ÅÅ4 :
<
ÅÅ: ;
decimal
ÅÅ; B
>
ÅÅB C
(
ÅÅC D
type
ÅÅD H
:
ÅÅH I
$str
ÅÅJ Y
,
ÅÅY Z
nullable
ÅÅ[ c
:
ÅÅc d
false
ÅÅe j
)
ÅÅj k
,
ÅÅk l 
ProfitabilityValue
ÇÇ &
=
ÇÇ' (
table
ÇÇ) .
.
ÇÇ. /
Column
ÇÇ/ 5
<
ÇÇ5 6
decimal
ÇÇ6 =
>
ÇÇ= >
(
ÇÇ> ?
type
ÇÇ? C
:
ÇÇC D
$str
ÇÇE T
,
ÇÇT U
nullable
ÇÇV ^
:
ÇÇ^ _
false
ÇÇ` e
)
ÇÇe f
,
ÇÇf g
	UpdatedAt
ÉÉ 
=
ÉÉ 
table
ÉÉ  %
.
ÉÉ% &
Column
ÉÉ& ,
<
ÉÉ, -
DateTime
ÉÉ- 5
>
ÉÉ5 6
(
ÉÉ6 7
type
ÉÉ7 ;
:
ÉÉ; <
$str
ÉÉ= J
,
ÉÉJ K
nullable
ÉÉL T
:
ÉÉT U
false
ÉÉV [
)
ÉÉ[ \
}
ÑÑ 
,
ÑÑ 
constraints
ÖÖ 
:
ÖÖ 
table
ÖÖ "
=>
ÖÖ# %
{
ÜÜ 
table
áá 
.
áá 

PrimaryKey
áá $
(
áá$ %
$str
áá% 4
,
áá4 5
x
áá6 7
=>
áá8 :
x
áá; <
.
áá< =
Id
áá= ?
)
áá? @
;
áá@ A
table
àà 
.
àà 

ForeignKey
àà $
(
àà$ %
name
ââ 
:
ââ 
$str
ââ @
,
ââ@ A
column
ää 
:
ää 
x
ää  !
=>
ää" $
x
ää% &
.
ää& '
	AccountId
ää' 0
,
ää0 1
principalTable
ãã &
:
ãã& '
$str
ãã( 2
,
ãã2 3
principalColumn
åå '
:
åå' (
$str
åå) -
,
åå- .
onDelete
çç  
:
çç  !
ReferentialAction
çç" 3
.
çç3 4
Cascade
çç4 ;
)
çç; <
;
çç< =
table
éé 
.
éé 

ForeignKey
éé $
(
éé$ %
name
èè 
:
èè 
$str
èè <
,
èè< =
column
êê 
:
êê 
x
êê  !
=>
êê" $
x
êê% &
.
êê& '
AssetId
êê' .
,
êê. /
principalTable
ëë &
:
ëë& '
$str
ëë( 0
,
ëë0 1
principalColumn
íí '
:
íí' (
$str
íí) -
,
íí- .
onDelete
ìì  
:
ìì  !
ReferentialAction
ìì" 3
.
ìì3 4
Cascade
ìì4 ;
)
ìì; <
;
ìì< =
}
îî 
)
îî 
.
ïï 

Annotation
ïï 
(
ïï 
$str
ïï +
,
ïï+ ,
$str
ïï- 6
)
ïï6 7
;
ïï7 8
migrationBuilder
óó 
.
óó 
CreateTable
óó (
(
óó( )
name
òò 
:
òò 
$str
òò *
,
òò* +
columns
ôô 
:
ôô 
table
ôô 
=>
ôô !
new
ôô" %
{
öö 
Id
õõ 
=
õõ 
table
õõ 
.
õõ 
Column
õõ %
<
õõ% &
int
õõ& )
>
õõ) *
(
õõ* +
type
õõ+ /
:
õõ/ 0
$str
õõ1 6
,
õõ6 7
nullable
õõ8 @
:
õõ@ A
false
õõB G
)
õõG H
.
úú 

Annotation
úú #
(
úú# $
$str
úú$ C
,
úúC D*
MySqlValueGenerationStrategy
úúE a
.
úúa b
IdentityColumn
úúb p
)
úúp q
,
úúq r
	AccountId
ùù 
=
ùù 
table
ùù  %
.
ùù% &
Column
ùù& ,
<
ùù, -
string
ùù- 3
>
ùù3 4
(
ùù4 5
type
ùù5 9
:
ùù9 :
$str
ùù; I
,
ùùI J
nullable
ùùK S
:
ùùS T
false
ùùU Z
)
ùùZ [
.
ûû 

Annotation
ûû #
(
ûû# $
$str
ûû$ 3
,
ûû3 4
$str
ûû5 >
)
ûû> ?
,
ûû? @
Value
üü 
=
üü 
table
üü !
.
üü! "
Column
üü" (
<
üü( )
decimal
üü) 0
>
üü0 1
(
üü1 2
type
üü2 6
:
üü6 7
$str
üü8 G
,
üüG H
nullable
üüI Q
:
üüQ R
false
üüS X
)
üüX Y
,
üüY Z
TransactionType
†† #
=
††$ %
table
††& +
.
††+ ,
Column
††, 2
<
††2 3
string
††3 9
>
††9 :
(
††: ;
type
††; ?
:
††? @
$str
††A K
,
††K L
nullable
††M U
:
††U V
false
††W \
)
††\ ]
.
°° 

Annotation
°° #
(
°°# $
$str
°°$ 3
,
°°3 4
$str
°°5 >
)
°°> ?
}
¢¢ 
,
¢¢ 
constraints
££ 
:
££ 
table
££ "
=>
££# %
{
§§ 
table
•• 
.
•• 

PrimaryKey
•• $
(
••$ %
$str
••% <
,
••< =
x
••> ?
=>
••@ B
x
••C D
.
••D E
Id
••E G
)
••G H
;
••H I
table
¶¶ 
.
¶¶ 

ForeignKey
¶¶ $
(
¶¶$ %
name
ßß 
:
ßß 
$str
ßß H
,
ßßH I
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
	AccountId
®®' 0
,
®®0 1
principalTable
©© &
:
©©& '
$str
©©( 2
,
©©2 3
principalColumn
™™ '
:
™™' (
$str
™™) -
,
™™- .
onDelete
´´  
:
´´  !
ReferentialAction
´´" 3
.
´´3 4
Cascade
´´4 ;
)
´´; <
;
´´< =
}
¨¨ 
)
¨¨ 
.
≠≠ 

Annotation
≠≠ 
(
≠≠ 
$str
≠≠ +
,
≠≠+ ,
$str
≠≠- 6
)
≠≠6 7
;
≠≠7 8
migrationBuilder
ØØ 
.
ØØ 

InsertData
ØØ '
(
ØØ' (
table
∞∞ 
:
∞∞ 
$str
∞∞ 
,
∞∞  
columns
±± 
:
±± 
new
±± 
[
±± 
]
±± 
{
±±  
$str
±±! %
,
±±% &
$str
±±' :
,
±±: ;
$str
±±< B
,
±±B C
$str
±±D K
,
±±K L
$str
±±M U
}
±±V W
,
±±W X
values
≤≤ 
:
≤≤ 
new
≤≤ 
object
≤≤ "
[
≤≤" #
,
≤≤# $
]
≤≤$ %
{
≥≥ 
{
¥¥ 
$num
¥¥ 
,
¥¥ 
$num
¥¥ "
,
¥¥" #
$str
¥¥$ 0
,
¥¥0 1
$num
¥¥2 8
,
¥¥8 9
$str
¥¥: A
}
¥¥B C
,
¥¥C D
{
µµ 
$num
µµ 
,
µµ 
$num
µµ "
,
µµ" #
$str
µµ$ /
,
µµ/ 0
$num
µµ1 7
,
µµ7 8
$str
µµ9 @
}
µµA B
,
µµB C
{
∂∂ 
$num
∂∂ 
,
∂∂ 
$num
∂∂ "
,
∂∂" #
$str
∂∂$ 0
,
∂∂0 1
$num
∂∂2 8
,
∂∂8 9
$str
∂∂: A
}
∂∂B C
,
∂∂C D
{
∑∑ 
$num
∑∑ 
,
∑∑ 
$num
∑∑ "
,
∑∑" #
$str
∑∑$ +
,
∑∑+ ,
$num
∑∑- 3
,
∑∑3 4
$str
∑∑5 <
}
∑∑= >
,
∑∑> ?
{
∏∏ 
$num
∏∏ 
,
∏∏ 
$num
∏∏ "
,
∏∏" #
$str
∏∏$ *
,
∏∏* +
$num
∏∏, 2
,
∏∏2 3
$str
∏∏4 ;
}
∏∏< =
,
∏∏= >
{
ππ 
$num
ππ 
,
ππ 
$num
ππ "
,
ππ" #
$str
ππ$ (
,
ππ( )
$num
ππ* 0
,
ππ0 1
$str
ππ2 9
}
ππ: ;
,
ππ; <
{
∫∫ 
$num
∫∫ 
,
∫∫ 
$num
∫∫ "
,
∫∫" #
$str
∫∫$ /
,
∫∫/ 0
$num
∫∫1 6
,
∫∫6 7
$str
∫∫8 ?
}
∫∫@ A
,
∫∫A B
{
ªª 
$num
ªª 
,
ªª 
$num
ªª "
,
ªª" #
$str
ªª$ 2
,
ªª2 3
$num
ªª4 :
,
ªª: ;
$str
ªª< C
}
ªªD E
,
ªªE F
{
ºº 
$num
ºº 
,
ºº 
$num
ºº #
,
ºº# $
$str
ºº% 3
,
ºº3 4
$num
ºº5 :
,
ºº: ;
$str
ºº< C
}
ººD E
,
ººE F
{
ΩΩ 
$num
ΩΩ 
,
ΩΩ 
$num
ΩΩ $
,
ΩΩ$ %
$str
ΩΩ& 0
,
ΩΩ0 1
$num
ΩΩ2 8
,
ΩΩ8 9
$str
ΩΩ: A
}
ΩΩB C
,
ΩΩC D
{
ææ 
$num
ææ 
,
ææ 
$num
ææ #
,
ææ# $
$str
ææ% /
,
ææ/ 0
$num
ææ1 7
,
ææ7 8
$str
ææ9 @
}
ææA B
,
ææB C
{
øø 
$num
øø 
,
øø 
$num
øø #
,
øø# $
$str
øø% 0
,
øø0 1
$num
øø2 8
,
øø8 9
$str
øø: A
}
øøB C
,
øøC D
{
¿¿ 
$num
¿¿ 
,
¿¿ 
$num
¿¿ $
,
¿¿$ %
$str
¿¿& .
,
¿¿. /
$num
¿¿0 6
,
¿¿6 7
$str
¿¿8 ?
}
¿¿@ A
,
¿¿A B
{
¡¡ 
$num
¡¡ 
,
¡¡ 
$num
¡¡ #
,
¡¡# $
$str
¡¡% .
,
¡¡. /
$num
¡¡0 6
,
¡¡6 7
$str
¡¡8 ?
}
¡¡@ A
,
¡¡A B
{
¬¬ 
$num
¬¬ 
,
¬¬ 
$num
¬¬ $
,
¬¬$ %
$str
¬¬& .
,
¬¬. /
$num
¬¬0 6
,
¬¬6 7
$str
¬¬8 ?
}
¬¬@ A
,
¬¬A B
{
√√ 
$num
√√ 
,
√√ 
$num
√√ $
,
√√$ %
$str
√√& 2
,
√√2 3
$num
√√4 :
,
√√: ;
$str
√√< D
}
√√E F
,
√√F G
{
ƒƒ 
$num
ƒƒ 
,
ƒƒ 
$num
ƒƒ #
,
ƒƒ# $
$str
ƒƒ% 3
,
ƒƒ3 4
$num
ƒƒ5 ;
,
ƒƒ; <
$str
ƒƒ= D
}
ƒƒE F
,
ƒƒF G
{
≈≈ 
$num
≈≈ 
,
≈≈ 
$num
≈≈ $
,
≈≈$ %
$str
≈≈& .
,
≈≈. /
$num
≈≈0 6
,
≈≈6 7
$str
≈≈8 ?
}
≈≈@ A
,
≈≈A B
{
∆∆ 
$num
∆∆ 
,
∆∆ 
$num
∆∆ $
,
∆∆$ %
$str
∆∆& -
,
∆∆- .
$num
∆∆/ 5
,
∆∆5 6
$str
∆∆7 >
}
∆∆? @
,
∆∆@ A
{
«« 
$num
«« 
,
«« 
$num
«« $
,
««$ %
$str
««& -
,
««- .
$num
««/ 4
,
««4 5
$str
««6 =
}
««> ?
,
««? @
{
»» 
$num
»» 
,
»» 
$num
»» $
,
»»$ %
$str
»»& 0
,
»»0 1
$num
»»2 7
,
»»7 8
$str
»»9 @
}
»»A B
,
»»B C
{
…… 
$num
…… 
,
…… 
$num
…… $
,
……$ %
$str
……& -
,
……- .
$num
……/ 3
,
……3 4
$str
……5 <
}
……= >
,
……> ?
{
   
$num
   
,
   
$num
   $
,
  $ %
$str
  & -
,
  - .
$num
  / 5
,
  5 6
$str
  7 >
}
  ? @
,
  @ A
{
ÀÀ 
$num
ÀÀ 
,
ÀÀ 
$num
ÀÀ #
,
ÀÀ# $
$str
ÀÀ% 3
,
ÀÀ3 4
$num
ÀÀ5 ;
,
ÀÀ; <
$str
ÀÀ= D
}
ÀÀE F
,
ÀÀF G
{
ÃÃ 
$num
ÃÃ 
,
ÃÃ 
$num
ÃÃ $
,
ÃÃ$ %
$str
ÃÃ& 4
,
ÃÃ4 5
$num
ÃÃ6 :
,
ÃÃ: ;
$str
ÃÃ< C
}
ÃÃD E
,
ÃÃE F
{
ÕÕ 
$num
ÕÕ 
,
ÕÕ 
$num
ÕÕ #
,
ÕÕ# $
$str
ÕÕ% 1
,
ÕÕ1 2
$num
ÕÕ3 8
,
ÕÕ8 9
$str
ÕÕ: A
}
ÕÕB C
,
ÕÕC D
{
ŒŒ 
$num
ŒŒ 
,
ŒŒ 
$num
ŒŒ #
,
ŒŒ# $
$str
ŒŒ% 3
,
ŒŒ3 4
$num
ŒŒ5 ;
,
ŒŒ; <
$str
ŒŒ= D
}
ŒŒE F
,
ŒŒF G
{
œœ 
$num
œœ 
,
œœ 
$num
œœ #
,
œœ# $
$str
œœ% ,
,
œœ, -
$num
œœ. 3
,
œœ3 4
$str
œœ5 <
}
œœ= >
,
œœ> ?
{
–– 
$num
–– 
,
–– 
$num
–– #
,
––# $
$str
––% 2
,
––2 3
$num
––4 8
,
––8 9
$str
––: A
}
––B C
,
––C D
{
—— 
$num
—— 
,
—— 
$num
—— #
,
——# $
$str
——% 1
,
——1 2
$num
——3 9
,
——9 :
$str
——; B
}
——C D
,
——D E
{
““ 
$num
““ 
,
““ 
$num
““ #
,
““# $
$str
““% 1
,
““1 2
$num
““3 9
,
““9 :
$str
““; B
}
““C D
,
““D E
{
”” 
$num
”” 
,
”” 
$num
”” #
,
””# $
$str
””% .
,
””. /
$num
””0 6
,
””6 7
$str
””8 ?
}
””@ A
,
””A B
{
‘‘ 
$num
‘‘ 
,
‘‘ 
$num
‘‘ #
,
‘‘# $
$str
‘‘% 2
,
‘‘2 3
$num
‘‘4 :
,
‘‘: ;
$str
‘‘< C
}
‘‘D E
,
‘‘E F
{
’’ 
$num
’’ 
,
’’ 
$num
’’ #
,
’’# $
$str
’’% /
,
’’/ 0
$num
’’1 7
,
’’7 8
$str
’’9 A
}
’’B C
,
’’C D
{
÷÷ 
$num
÷÷ 
,
÷÷ 
$num
÷÷ $
,
÷÷$ %
$str
÷÷& -
,
÷÷- .
$num
÷÷/ 5
,
÷÷5 6
$str
÷÷7 >
}
÷÷? @
,
÷÷@ A
{
◊◊ 
$num
◊◊ 
,
◊◊ 
$num
◊◊ #
,
◊◊# $
$str
◊◊% 3
,
◊◊3 4
$num
◊◊5 ;
,
◊◊; <
$str
◊◊= D
}
◊◊E F
,
◊◊F G
{
ÿÿ 
$num
ÿÿ 
,
ÿÿ 
$num
ÿÿ $
,
ÿÿ$ %
$str
ÿÿ& 2
,
ÿÿ2 3
$num
ÿÿ4 :
,
ÿÿ: ;
$str
ÿÿ< C
}
ÿÿD E
,
ÿÿE F
{
ŸŸ 
$num
ŸŸ 
,
ŸŸ 
$num
ŸŸ #
,
ŸŸ# $
$str
ŸŸ% ,
,
ŸŸ, -
$num
ŸŸ. 4
,
ŸŸ4 5
$str
ŸŸ6 =
}
ŸŸ> ?
,
ŸŸ? @
{
⁄⁄ 
$num
⁄⁄ 
,
⁄⁄ 
$num
⁄⁄ #
,
⁄⁄# $
$str
⁄⁄% -
,
⁄⁄- .
$num
⁄⁄/ 5
,
⁄⁄5 6
$str
⁄⁄7 >
}
⁄⁄? @
,
⁄⁄@ A
{
€€ 
$num
€€ 
,
€€ 
$num
€€ $
,
€€$ %
$str
€€& .
,
€€. /
$num
€€0 6
,
€€6 7
$str
€€8 ?
}
€€@ A
,
€€A B
{
‹‹ 
$num
‹‹ 
,
‹‹ 
$num
‹‹ #
,
‹‹# $
$str
‹‹% 1
,
‹‹1 2
$num
‹‹3 8
,
‹‹8 9
$str
‹‹: A
}
‹‹B C
,
‹‹C D
{
›› 
$num
›› 
,
›› 
$num
›› #
,
››# $
$str
››% *
,
››* +
$num
››, 1
,
››1 2
$str
››3 :
}
››; <
,
››< =
{
ﬁﬁ 
$num
ﬁﬁ 
,
ﬁﬁ 
$num
ﬁﬁ #
,
ﬁﬁ# $
$str
ﬁﬁ% 3
,
ﬁﬁ3 4
$num
ﬁﬁ5 ;
,
ﬁﬁ; <
$str
ﬁﬁ= D
}
ﬁﬁE F
,
ﬁﬁF G
{
ﬂﬂ 
$num
ﬂﬂ 
,
ﬂﬂ 
$num
ﬂﬂ #
,
ﬂﬂ# $
$str
ﬂﬂ% 1
,
ﬂﬂ1 2
$num
ﬂﬂ3 8
,
ﬂﬂ8 9
$str
ﬂﬂ: A
}
ﬂﬂB C
,
ﬂﬂC D
{
‡‡ 
$num
‡‡ 
,
‡‡ 
$num
‡‡ #
,
‡‡# $
$str
‡‡% .
,
‡‡. /
$num
‡‡0 5
,
‡‡5 6
$str
‡‡7 >
}
‡‡? @
,
‡‡@ A
{
·· 
$num
·· 
,
·· 
$num
·· #
,
··# $
$str
··% -
,
··- .
$num
··/ 5
,
··5 6
$str
··7 >
}
··? @
,
··@ A
{
‚‚ 
$num
‚‚ 
,
‚‚ 
$num
‚‚ #
,
‚‚# $
$str
‚‚% 2
,
‚‚2 3
$num
‚‚4 :
,
‚‚: ;
$str
‚‚< D
}
‚‚E F
,
‚‚F G
{
„„ 
$num
„„ 
,
„„ 
$num
„„ $
,
„„$ %
$str
„„& 4
,
„„4 5
$num
„„6 8
,
„„8 9
$str
„„: A
}
„„B C
,
„„C D
{
‰‰ 
$num
‰‰ 
,
‰‰ 
$num
‰‰ #
,
‰‰# $
$str
‰‰% -
,
‰‰- .
$num
‰‰/ 4
,
‰‰4 5
$str
‰‰6 =
}
‰‰> ?
,
‰‰? @
{
ÂÂ 
$num
ÂÂ 
,
ÂÂ 
$num
ÂÂ #
,
ÂÂ# $
$str
ÂÂ% 3
,
ÂÂ3 4
$num
ÂÂ5 ;
,
ÂÂ; <
$str
ÂÂ= D
}
ÂÂE F
,
ÂÂF G
{
ÊÊ 
$num
ÊÊ 
,
ÊÊ 
$num
ÊÊ $
,
ÊÊ$ %
$str
ÊÊ& +
,
ÊÊ+ ,
$num
ÊÊ- 3
,
ÊÊ3 4
$str
ÊÊ5 <
}
ÊÊ= >
,
ÊÊ> ?
{
ÁÁ 
$num
ÁÁ 
,
ÁÁ 
$num
ÁÁ #
,
ÁÁ# $
$str
ÁÁ% 0
,
ÁÁ0 1
$num
ÁÁ2 6
,
ÁÁ6 7
$str
ÁÁ8 ?
}
ÁÁ@ A
,
ÁÁA B
{
ËË 
$num
ËË 
,
ËË 
$num
ËË #
,
ËË# $
$str
ËË% 1
,
ËË1 2
$num
ËË3 8
,
ËË8 9
$str
ËË: B
}
ËËC D
,
ËËD E
{
ÈÈ 
$num
ÈÈ 
,
ÈÈ 
$num
ÈÈ #
,
ÈÈ# $
$str
ÈÈ% /
,
ÈÈ/ 0
$num
ÈÈ1 7
,
ÈÈ7 8
$str
ÈÈ9 @
}
ÈÈA B
,
ÈÈB C
{
ÍÍ 
$num
ÍÍ 
,
ÍÍ 
$num
ÍÍ #
,
ÍÍ# $
$str
ÍÍ% .
,
ÍÍ. /
$num
ÍÍ0 5
,
ÍÍ5 6
$str
ÍÍ7 >
}
ÍÍ? @
,
ÍÍ@ A
{
ÎÎ 
$num
ÎÎ 
,
ÎÎ 
$num
ÎÎ #
,
ÎÎ# $
$str
ÎÎ% 3
,
ÎÎ3 4
$num
ÎÎ5 ;
,
ÎÎ; <
$str
ÎÎ= D
}
ÎÎE F
,
ÎÎF G
{
ÏÏ 
$num
ÏÏ 
,
ÏÏ 
$num
ÏÏ #
,
ÏÏ# $
$str
ÏÏ% 2
,
ÏÏ2 3
$num
ÏÏ4 9
,
ÏÏ9 :
$str
ÏÏ; B
}
ÏÏC D
,
ÏÏD E
{
ÌÌ 
$num
ÌÌ 
,
ÌÌ 
$num
ÌÌ #
,
ÌÌ# $
$str
ÌÌ% .
,
ÌÌ. /
$num
ÌÌ0 6
,
ÌÌ6 7
$str
ÌÌ8 ?
}
ÌÌ@ A
,
ÌÌA B
{
ÓÓ 
$num
ÓÓ 
,
ÓÓ 
$num
ÓÓ #
,
ÓÓ# $
$str
ÓÓ% -
,
ÓÓ- .
$num
ÓÓ/ 4
,
ÓÓ4 5
$str
ÓÓ6 =
}
ÓÓ> ?
,
ÓÓ? @
{
ÔÔ 
$num
ÔÔ 
,
ÔÔ 
$num
ÔÔ #
,
ÔÔ# $
$str
ÔÔ% .
,
ÔÔ. /
$num
ÔÔ0 6
,
ÔÔ6 7
$str
ÔÔ8 ?
}
ÔÔ@ A
,
ÔÔA B
{
 
$num
 
,
 
$num
 #
,
# $
$str
% *
,
* +
$num
, 1
,
1 2
$str
3 :
}
; <
,
< =
{
ÒÒ 
$num
ÒÒ 
,
ÒÒ 
$num
ÒÒ #
,
ÒÒ# $
$str
ÒÒ% 0
,
ÒÒ0 1
$num
ÒÒ2 8
,
ÒÒ8 9
$str
ÒÒ: A
}
ÒÒB C
,
ÒÒC D
{
ÚÚ 
$num
ÚÚ 
,
ÚÚ 
$num
ÚÚ #
,
ÚÚ# $
$str
ÚÚ% 2
,
ÚÚ2 3
$num
ÚÚ4 9
,
ÚÚ9 :
$str
ÚÚ; B
}
ÚÚC D
,
ÚÚD E
{
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
$num
ÛÛ #
,
ÛÛ# $
$str
ÛÛ% 0
,
ÛÛ0 1
$num
ÛÛ2 8
,
ÛÛ8 9
$str
ÛÛ: A
}
ÛÛB C
,
ÛÛC D
{
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
$num
ÙÙ #
,
ÙÙ# $
$str
ÙÙ% 0
,
ÙÙ0 1
$num
ÙÙ2 8
,
ÙÙ8 9
$str
ÙÙ: A
}
ÙÙB C
,
ÙÙC D
{
ıı 
$num
ıı 
,
ıı 
$num
ıı #
,
ıı# $
$str
ıı% /
,
ıı/ 0
$num
ıı1 7
,
ıı7 8
$str
ıı9 @
}
ııA B
,
ııB C
{
ˆˆ 
$num
ˆˆ 
,
ˆˆ 
$num
ˆˆ #
,
ˆˆ# $
$str
ˆˆ% +
,
ˆˆ+ ,
$num
ˆˆ- 2
,
ˆˆ2 3
$str
ˆˆ4 ;
}
ˆˆ< =
,
ˆˆ= >
{
˜˜ 
$num
˜˜ 
,
˜˜ 
$num
˜˜ "
,
˜˜" #
$str
˜˜$ 2
,
˜˜2 3
$num
˜˜4 9
,
˜˜9 :
$str
˜˜; B
}
˜˜C D
,
˜˜D E
{
¯¯ 
$num
¯¯ 
,
¯¯ 
$num
¯¯ #
,
¯¯# $
$str
¯¯% 0
,
¯¯0 1
$num
¯¯2 8
,
¯¯8 9
$str
¯¯: A
}
¯¯B C
,
¯¯C D
{
˘˘ 
$num
˘˘ 
,
˘˘ 
$num
˘˘ $
,
˘˘$ %
$str
˘˘& 4
,
˘˘4 5
$num
˘˘6 <
,
˘˘< =
$str
˘˘> E
}
˘˘F G
,
˘˘G H
{
˙˙ 
$num
˙˙ 
,
˙˙ 
$num
˙˙ #
,
˙˙# $
$str
˙˙% 0
,
˙˙0 1
$num
˙˙2 8
,
˙˙8 9
$str
˙˙: A
}
˙˙B C
,
˙˙C D
{
˚˚ 
$num
˚˚ 
,
˚˚ 
$num
˚˚ $
,
˚˚$ %
$str
˚˚& /
,
˚˚/ 0
$num
˚˚1 7
,
˚˚7 8
$str
˚˚9 @
}
˚˚A B
,
˚˚B C
{
¸¸ 
$num
¸¸ 
,
¸¸ 
$num
¸¸ #
,
¸¸# $
$str
¸¸% -
,
¸¸- .
$num
¸¸/ 5
,
¸¸5 6
$str
¸¸7 >
}
¸¸? @
,
¸¸@ A
{
˝˝ 
$num
˝˝ 
,
˝˝ 
$num
˝˝ #
,
˝˝# $
$str
˝˝% 3
,
˝˝3 4
$num
˝˝5 ;
,
˝˝; <
$str
˝˝= E
}
˝˝F G
,
˝˝G H
{
˛˛ 
$num
˛˛ 
,
˛˛ 
$num
˛˛ #
,
˛˛# $
$str
˛˛% 3
,
˛˛3 4
$num
˛˛5 ;
,
˛˛; <
$str
˛˛= D
}
˛˛E F
,
˛˛F G
{
ˇˇ 
$num
ˇˇ 
,
ˇˇ 
$num
ˇˇ "
,
ˇˇ" #
$str
ˇˇ$ 2
,
ˇˇ2 3
$num
ˇˇ4 :
,
ˇˇ: ;
$str
ˇˇ< C
}
ˇˇD E
,
ˇˇE F
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
$num
ÄÄ #
,
ÄÄ# $
$str
ÄÄ% 2
,
ÄÄ2 3
$num
ÄÄ4 9
,
ÄÄ9 :
$str
ÄÄ; C
}
ÄÄD E
,
ÄÄE F
{
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
$num
ÅÅ #
,
ÅÅ# $
$str
ÅÅ% 0
,
ÅÅ0 1
$num
ÅÅ2 8
,
ÅÅ8 9
$str
ÅÅ: A
}
ÅÅB C
,
ÅÅC D
{
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
$num
ÇÇ #
,
ÇÇ# $
$str
ÇÇ% ,
,
ÇÇ, -
$num
ÇÇ. 4
,
ÇÇ4 5
$str
ÇÇ6 >
}
ÇÇ? @
,
ÇÇ@ A
{
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
$num
ÉÉ #
,
ÉÉ# $
$str
ÉÉ% 3
,
ÉÉ3 4
$num
ÉÉ5 ;
,
ÉÉ; <
$str
ÉÉ= D
}
ÉÉE F
,
ÉÉF G
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$num
ÑÑ #
,
ÑÑ# $
$str
ÑÑ% *
,
ÑÑ* +
$num
ÑÑ, 1
,
ÑÑ1 2
$str
ÑÑ3 :
}
ÑÑ; <
,
ÑÑ< =
{
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
$num
ÖÖ #
,
ÖÖ# $
$str
ÖÖ% ,
,
ÖÖ, -
$num
ÖÖ. 4
,
ÖÖ4 5
$str
ÖÖ6 =
}
ÖÖ> ?
,
ÖÖ? @
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
$num
ÜÜ $
,
ÜÜ$ %
$str
ÜÜ& 0
,
ÜÜ0 1
$num
ÜÜ2 8
,
ÜÜ8 9
$str
ÜÜ: A
}
ÜÜB C
,
ÜÜC D
{
áá 
$num
áá 
,
áá 
$num
áá #
,
áá# $
$str
áá% /
,
áá/ 0
$num
áá1 6
,
áá6 7
$str
áá8 ?
}
áá@ A
,
ááA B
{
àà 
$num
àà 
,
àà 
$num
àà #
,
àà# $
$str
àà% +
,
àà+ ,
$num
àà- 3
,
àà3 4
$str
àà5 <
}
àà= >
,
àà> ?
{
ââ 
$num
ââ 
,
ââ 
$num
ââ $
,
ââ$ %
$str
ââ& +
,
ââ+ ,
$num
ââ- 2
,
ââ2 3
$str
ââ4 ;
}
ââ< =
,
ââ= >
{
ää 
$num
ää 
,
ää 
$num
ää $
,
ää$ %
$str
ää& -
,
ää- .
$num
ää/ 5
,
ää5 6
$str
ää7 >
}
ää? @
,
ää@ A
{
ãã 
$num
ãã 
,
ãã 
$num
ãã $
,
ãã$ %
$str
ãã& +
,
ãã+ ,
$num
ãã- 3
,
ãã3 4
$str
ãã5 <
}
ãã= >
,
ãã> ?
{
åå 
$num
åå 
,
åå 
$num
åå #
,
åå# $
$str
åå% 1
,
åå1 2
$num
åå3 8
,
åå8 9
$str
åå: A
}
ååB C
,
ååC D
{
çç 
$num
çç 
,
çç 
$num
çç #
,
çç# $
$str
çç% 3
,
çç3 4
$num
çç5 ;
,
çç; <
$str
çç= D
}
ççE F
}
éé 
)
éé 
;
éé 
migrationBuilder
êê 
.
êê 
CreateIndex
êê (
(
êê( )
name
ëë 
:
ëë 
$str
ëë ,
,
ëë, -
table
íí 
:
íí 
$str
íí !
,
íí! "
column
ìì 
:
ìì 
$str
ìì "
,
ìì" #
unique
îî 
:
îî 
true
îî 
)
îî 
;
îî 
migrationBuilder
ññ 
.
ññ 
CreateIndex
ññ (
(
ññ( )
name
óó 
:
óó 
$str
óó (
,
óó( )
table
òò 
:
òò 
$str
òò  
,
òò  !
column
ôô 
:
ôô 
$str
ôô 
,
ôô  
unique
öö 
:
öö 
true
öö 
)
öö 
;
öö 
migrationBuilder
úú 
.
úú 
CreateIndex
úú (
(
úú( )
name
ùù 
:
ùù 
$str
ùù 7
,
ùù7 8
table
ûû 
:
ûû 
$str
ûû +
,
ûû+ ,
column
üü 
:
üü 
$str
üü #
)
üü# $
;
üü$ %
migrationBuilder
°° 
.
°° 
CreateIndex
°° (
(
°°( )
name
¢¢ 
:
¢¢ 
$str
¢¢ 5
,
¢¢5 6
table
££ 
:
££ 
$str
££ +
,
££+ ,
column
§§ 
:
§§ 
$str
§§ !
)
§§! "
;
§§" #
migrationBuilder
¶¶ 
.
¶¶ 
CreateIndex
¶¶ (
(
¶¶( )
name
ßß 
:
ßß 
$str
ßß /
,
ßß/ 0
table
®® 
:
®® 
$str
®® #
,
®®# $
column
©© 
:
©© 
$str
©© #
)
©©# $
;
©©$ %
migrationBuilder
´´ 
.
´´ 
CreateIndex
´´ (
(
´´( )
name
¨¨ 
:
¨¨ 
$str
¨¨ -
,
¨¨- .
table
≠≠ 
:
≠≠ 
$str
≠≠ #
,
≠≠# $
column
ÆÆ 
:
ÆÆ 
$str
ÆÆ !
)
ÆÆ! "
;
ÆÆ" #
migrationBuilder
∞∞ 
.
∞∞ 
CreateIndex
∞∞ (
(
∞∞( )
name
±± 
:
±± 
$str
±± 7
,
±±7 8
table
≤≤ 
:
≤≤ 
$str
≤≤ +
,
≤≤+ ,
column
≥≥ 
:
≥≥ 
$str
≥≥ #
)
≥≥# $
;
≥≥$ %
}
¥¥ 	
	protected
∑∑ 
override
∑∑ 
void
∑∑ 
Down
∑∑  $
(
∑∑$ %
MigrationBuilder
∑∑% 5
migrationBuilder
∑∑6 F
)
∑∑F G
{
∏∏ 	
migrationBuilder
ππ 
.
ππ 
	DropTable
ππ &
(
ππ& '
name
∫∫ 
:
∫∫ 
$str
∫∫ *
)
∫∫* +
;
∫∫+ ,
migrationBuilder
ºº 
.
ºº 
	DropTable
ºº &
(
ºº& '
name
ΩΩ 
:
ΩΩ 
$str
ΩΩ "
)
ΩΩ" #
;
ΩΩ# $
migrationBuilder
øø 
.
øø 
	DropTable
øø &
(
øø& '
name
¿¿ 
:
¿¿ 
$str
¿¿ *
)
¿¿* +
;
¿¿+ ,
migrationBuilder
¬¬ 
.
¬¬ 
	DropTable
¬¬ &
(
¬¬& '
name
√√ 
:
√√ 
$str
√√ 
)
√√ 
;
√√  
migrationBuilder
≈≈ 
.
≈≈ 
	DropTable
≈≈ &
(
≈≈& '
name
∆∆ 
:
∆∆ 
$str
∆∆  
)
∆∆  !
;
∆∆! "
migrationBuilder
»» 
.
»» 
	DropTable
»» &
(
»»& '
name
…… 
:
…… 
$str
…… 
)
……  
;
……  !
}
   	
}
ÀÀ 
}ÃÃ ≈
MC:\repositorio\TaskManagementSystem\src\Infra\Database\models\AccountModel.cs
	namespace 	
Infra
 
. 
Database 
. 
models 
;  
public 
class 
AccountModel 
{ 
[ 
Key 
] 
[ 
Required 
] 
public		 
string		 
Id		 
{		 
get		 
;		 
set		 
;		 
}		 
=		  !
string		" (
.		( )
Empty		) .
;		. /
[ 
Required 

]
 
public 
string 
ClientId 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
[ 
Required 

]
 
[ 
Column 
( 	
TypeName	 
= 
$str $
)$ %
]% &
public 
decimal 
Balance 
{ 
get 
; 
set "
;" #
}$ %
[ 
Required 

]
 
public 
DateTime 
	CreatedAt 
{ 
get  
;  !
}" #
=$ %
DateTime& .
.. /
Now/ 2
;2 3
[ 
Required 

]
 
public 
DateTime 
	UpdatedAt 
{ 
get  
;  !
set" %
;% &
}' (
=) *
DateTime+ 3
.3 4
Now4 7
;7 8
public 
virtual 
ClientModel 
Client "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
null3 7
!7 8
;8 9
public 
virtual 
IEnumerable 
< #
TransactionHistoryModel 3
>3 4
TransactionHistory5 G
{H I
getJ M
;M N
setO R
;R S
}T U
=V W
nullX \
!\ ]
;] ^
public 
virtual 
IEnumerable 
< #
InvestmentsHistoryModel 3
>3 4
InvestmentsHistory5 G
{H I
getJ M
;M N
setO R
;R S
}T U
=V W
nullX \
!\ ]
;] ^
public 
virtual 
IEnumerable 
< 
PortfolioModel *
>* +

Portfolios, 6
{7 8
get9 <
;< =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
} ü
KC:\repositorio\TaskManagementSystem\src\Infra\Database\models\AssetModel.cs
	namespace 	
Infra
 
. 
Database 
. 
models 
;  
public 
class 

AssetModel 
{ 
[ 
Key 
] 
[ 
Required 
] 
[ 
DatabaseGenerated $
($ %#
DatabaseGeneratedOption% <
.< =
Identity= E
)E F
]F G
public		 
int		 
Id		 
{		 
get		 
;		 
init		 
;		 
}		 
[ 
Required 

]
 
public 
string 
Symbol 
{ 
get 
; 
set  
;  !
}" #
=$ %
string& ,
., -
Empty- 2
;2 3
[ 
Required 

]
 
public 
string 
Name 
{ 
get 
; 
set 
; 
}  !
=" #
string$ *
.* +
Empty+ 0
;0 1
[ 
Required 

]
 
public 
int 
AvailableQuantity 
{ 
get  #
;# $
set% (
;( )
}* +
[ 
Required 

]
 
[ 
Column 
( 	
TypeName	 
= 
$str $
)$ %
]% &
public 
decimal 
Price 
{ 
get 
; 
set  
;  !
}" #
public 
virtual 
IEnumerable 
< 
PortfolioModel *
>* +

Portfolios, 6
{7 8
get9 <
;< =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
public 
virtual 
IEnumerable 
< #
InvestmentsHistoryModel 3
>3 4
InvestmentsHistory5 G
{H I
getJ M
;M N
setO R
;R S
}T U
=V W
nullX \
!\ ]
;] ^
} ¡
LC:\repositorio\TaskManagementSystem\src\Infra\Database\models\ClientModel.cs
	namespace 	
Infra
 
. 
Database 
. 
models 
;  
[ 
Index 
( 
$str 
, 
IsUnique 
= 
true 
)  
]  !
public 
class 
ClientModel 
{ 
[		 
Key		 
]		 
[		 
Required		 
]		 
public

 
string

 
Id

 
{

 
get

 
;

 
set

 
;

 
}

 
=

  !
string

" (
.

( )
Empty

) .
;

. /
[ 
Required 

]
 
public 
string 
Name 
{ 
get 
; 
set 
; 
}  !
=" #
string$ *
.* +
Empty+ 0
;0 1
[ 
Required 

]
 
public 
string 
Email 
{ 
get 
; 
set 
;  
}! "
=# $
string% +
.+ ,
Empty, 1
;1 2
[ 
Required 

]
 
public 
string 
Password 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
public 
virtual 
AccountModel 
? 
Account %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} Ÿ
XC:\repositorio\TaskManagementSystem\src\Infra\Database\models\InvestmentsHistoryModel.cs
	namespace 	
Infra
 
. 
Database 
. 
models 
;  
public 
class #
InvestmentsHistoryModel $
{ 
[ 
Key 
] 
[ 
Required 
] 
[ 
DatabaseGenerated $
($ %#
DatabaseGeneratedOption% <
.< =
Identity= E
)E F
]F G
public		 
int		 
Id		 
{		 
get		 
;		 
set		 
;		 
}		 
[ 
Required 

]
 
public 
string 
	AccountId 
{ 
get 
; 
set  #
;# $
}% &
=' (
null) -
!- .
;. /
[ 
Required 

]
 
public 
int 
AssetId 
{ 
get 
; 
set 
; 
}  !
[ 
Required 

]
 
public 
string 
InvestmentType 
{ 
get  #
;# $
set% (
;( )
}* +
[ 
Required 

]
 
public 
int 
Quantity 
{ 
get 
; 
set 
;  
}! "
[ 
Required 

]
 
[ 
Column 
( 
TypeName 
= 
$str .
). /
]/ 0
public 
decimal 
Price 
{ 
get 
; 
set  
;  !
}" #
[ 
Required 

]
 
public 
DateTime 
	CreatedAt 
{ 
get  
;  !
set" %
;% &
}' (
=) *
DateTime+ 3
.3 4
Now4 7
;7 8
public 
virtual 

AssetModel 
? 
Asset !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
virtual 
AccountModel 
? 
Account %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} Å#
OC:\repositorio\TaskManagementSystem\src\Infra\Database\models\PortfolioModel.cs
	namespace 	
Infra
 
. 
Database 
. 
models 
;  
public 
class 
PortfolioModel 
{ 
[ 
Key 
] 
[ 
Required 
] 
[ 
DatabaseGenerated $
($ %#
DatabaseGeneratedOption% <
.< =
Identity= E
)E F
]F G
public		 
int		 
Id		 
{		 
get		 
;		 
set		 
;		 
}		 
[ 
Required 

]
 
public 
int 
AssetId 
{ 
get 
; 
set 
; 
}  !
[ 
Required 

]
 
public 
string 
	AccountId 
{ 
get 
; 
set  #
;# $
}% &
=' (
null) -
!- .
;. /
[ 
Required 

]
 
[ 
StringLength 
( 
$num 
) 
] 
public 
string 
Symbol 
{ 
get 
; 
set  
;  !
}" #
=$ %
null& *
!* +
;+ ,
[ 
Required 

]
 
public 
int 
Quantity 
{ 
get 
; 
set 
;  
}! "
[ 
Required 

]
 
[ 
Column 
( 
TypeName 
= 
$str .
). /
]/ 0
public 
decimal  
AveragePurchasePrice $
{% &
get' *
;* +
set, /
;/ 0
}1 2
[ 
Required 

]
 
[ 
Column 
( 
TypeName 
= 
$str .
). /
]/ 0
public 
decimal 
AcquisitionValue  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 
Required 

]
 
[ 
Column 
( 
TypeName 
= 
$str .
). /
]/ 0
public 
decimal 
CurrentValue 
{ 
get "
;" #
set$ '
;' (
}) *
[!! 
Required!! 

]!!
 
[!! 
Column!! 
(!! 
TypeName!! 
=!! 
$str!! .
)!!. /
]!!/ 0
public"" 
decimal"" #
ProfitabilityPercentage"" '
{""( )
get""* -
;""- .
set""/ 2
;""2 3
}""4 5
[$$ 
Required$$ 

]$$
 
[$$ 
Column$$ 
($$ 
TypeName$$ 
=$$ 
$str$$ .
)$$. /
]$$/ 0
public%% 
decimal%% 
ProfitabilityValue%% "
{%%# $
get%%% (
;%%( )
set%%* -
;%%- .
}%%/ 0
['' 
Required'' 

]''
 
public(( 
DateTime(( 
	CreatedAt(( 
{(( 
get((  
;((  !
}((" #
=(($ %
DateTime((& .
.((. /
Now((/ 2
;((2 3
[** 
Required** 

]**
 
public++ 
DateTime++ 
	UpdatedAt++ 
{++ 
get++  
;++  !
set++" %
;++% &
}++' (
=++) *
DateTime+++ 3
.++3 4
Now++4 7
;++7 8
public-- 
virtual-- 

AssetModel-- 
?-- 
Asset-- !
{--" #
get--$ '
;--' (
set--) ,
;--, -
}--. /
public.. 
virtual.. 
AccountModel.. 
?.. 
Account.. %
{..& '
get..( +
;..+ ,
set..- 0
;..0 1
}..2 3
}// Ê
XC:\repositorio\TaskManagementSystem\src\Infra\Database\models\TransactionHistoryModel.cs
	namespace 	
Infra
 
. 
Database 
. 
models 
;  
public 
class #
TransactionHistoryModel $
{ 
[ 
Key 
] 
[ 
Required 
] 
[ 
DatabaseGenerated $
($ %#
DatabaseGeneratedOption% <
.< =
Identity= E
)E F
]F G
public		 
int		 
Id		 
{		 
get		 
;		 
set		 
;		 
}		 
[ 
Required 

]
 
public 
string 
	AccountId 
{ 
get 
; 
set  #
;# $
}% &
=' (
null) -
!- .
;. /
[ 
Required 

]
 
[ 
Column 
( 	
TypeName	 
= 
$str $
)$ %
]% &
public 
decimal 
Value 
{ 
get 
; 
set  
;  !
}" #
[ 
Required 

]
 
public 
string 
TransactionType 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 
Required 

]
 
public 
DateTime 
	CreatedAt 
{ 
get  
;  !
}" #
=$ %
DateTime& .
.. /
Now/ 2
;2 3
public 
virtual 
AccountModel 
Account $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
public 
enum 
TransactionType 
{ 
Deposit 
, 	
Withdraw 	
} ˝
YC:\repositorio\TaskManagementSystem\src\Infra\Database\Repositories\CategoryRepository.cs
	namespace 	
Infra
 
. 
Database 
. 
Repositories %
{ 
public 

class 
CategoryRepository #
:$ %
ICategoryRepository& 9
{		 
private

 
readonly

  
ApplicationDbContext

 -
_context

. 6
;

6 7
public 
CategoryRepository !
(! " 
ApplicationDbContext" 6
context7 >
)> ?
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Category& .
>. /
>/ 0!
GetAllCategoriesAsync1 F
(F G
)G H
{ 	
return 
await 
_context !
.! "

Categories" ,
., -
ToListAsync- 8
(8 9
)9 :
;: ;
} 	
public 
async 
Task 
< 
Category "
>" # 
GetCategoryByIdAsync$ 8
(8 9
int9 <
id= ?
)? @
{ 	
return 
await 
_context !
.! "

Categories" ,
., -
	FindAsync- 6
(6 7
id7 9
)9 :
;: ;
} 	
public 
async 
Task 
AddCategoryAsync *
(* +
Category+ 3
category4 <
)< =
{ 	
await 
_context 
. 

Categories %
.% &
AddAsync& .
(. /
category/ 7
)7 8
;8 9
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public!! 
async!! 
Task!! 
UpdateCategoryAsync!! -
(!!- .
Category!!. 6
category!!7 ?
)!!? @
{"" 	
_context## 
.## 

Categories## 
.##  
Update##  &
(##& '
category##' /
)##/ 0
;##0 1
await$$ 
_context$$ 
.$$ 
SaveChangesAsync$$ +
($$+ ,
)$$, -
;$$- .
}%% 	
public'' 
async'' 
Task'' 
DeleteCategoryAsync'' -
(''- .
int''. 1
id''2 4
)''4 5
{(( 	
var)) 
category)) 
=)) 
await))  
_context))! )
.))) *

Categories))* 4
.))4 5
	FindAsync))5 >
())> ?
id))? A
)))A B
;))B C
if** 
(** 
category** 
!=** 
null**  
)**  !
{++ 
_context,, 
.,, 

Categories,, #
.,,# $
Remove,,$ *
(,,* +
category,,+ 3
),,3 4
;,,4 5
await-- 
_context-- 
.-- 
SaveChangesAsync-- /
(--/ 0
)--0 1
;--1 2
}.. 
}// 	
}00 
}11 í
UC:\repositorio\TaskManagementSystem\src\Infra\Database\Repositories\TaskRepository.cs
	namespace 	
Infra
 
. 
Database 
. 
Repositories %
{ 
public 

class 
TaskRepository 
:  !
ITaskRepository" 1
{		 
private

 
readonly

  
ApplicationDbContext

 -
_context

. 6
;

6 7
public 
TaskRepository 
(  
ApplicationDbContext 2
context3 :
): ;
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Tasks& +
>+ ,
>, -!
GetTasksByUserIdAsync. C
(C D
intD G
userIdH N
)N O
{ 	
return 
await 
_context !
.! "
Tasks" '
.' (
Where( -
(- .
t. /
=>0 2
t3 4
.4 5
UserId5 ;
==< >
userId? E
)E F
.F G
ToListAsyncG R
(R S
)S T
;T U
} 	
public 
async 
Task 
AddTaskAsync &
(& '
Tasks' ,
task- 1
)1 2
{ 	
await 
_context 
. 
Tasks  
.  !
AddAsync! )
() *
task* .
). /
;/ 0
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
async 
Task 
UpdateTaskAsync )
() *
Tasks* /
task0 4
)4 5
{ 	
_context 
. 
Tasks 
. 
Update !
(! "
task" &
)& '
;' (
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
}   	
public## 
async## 
Task## 
DeleteTaskAsync## )
(##) *
int##* -
id##. 0
)##0 1
{$$ 	
var%% 
task%% 
=%% 
await%% 
_context%% %
.%%% &
Tasks%%& +
.%%+ ,
	FindAsync%%, 5
(%%5 6
id%%6 8
)%%8 9
;%%9 :
if&& 
(&& 
task&& 
!=&& 
null&& 
)&& 
{'' 
_context(( 
.(( 
Tasks(( 
.(( 
Remove(( %
(((% &
task((& *
)((* +
;((+ ,
await)) 
_context)) 
.)) 
SaveChangesAsync)) /
())/ 0
)))0 1
;))1 2
}** 
}++ 	
public-- 
Task-- 
<-- 
Tasks-- 
>-- 
GetTaskByIdAsync-- +
(--+ ,
int--, /
id--0 2
)--2 3
{.. 	
throw// 
new// #
NotImplementedException// -
(//- .
)//. /
;/// 0
}00 	
}11 
}22 ˘
UC:\repositorio\TaskManagementSystem\src\Infra\Database\Repositories\UserRepository.cs
	namespace 	
Infra
 
. 
Database 
. 
Repositories %
{ 
public 

class 
UserRepository 
:  !
IUserRepository" 1
{		 
private

 
readonly

  
ApplicationDbContext

 -
_context

. 6
;

6 7
public 
UserRepository 
(  
ApplicationDbContext 2
context3 :
): ;
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
AddUserAsync &
(& '
User' +
user, 0
)0 1
{ 	
await 
_context 
. 
Users  
.  !
AddAsync! )
() *
user* .
). /
;/ 0
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
User 
> 
GetUserByIdAsync  0
(0 1
int1 4
id5 7
)7 8
{ 	
return 
await 
_context !
.! "
Users" '
.' (
	FindAsync( 1
(1 2
id2 4
)4 5
;5 6
} 	
public 
async 
Task 
< 
User 
> 
GetUserByEmailAsync  3
(3 4
string4 :
email; @
)@ A
{ 	
return 
await 
_context !
.! "
Users" '
.' (
FirstOrDefaultAsync( ;
(; <
u< =
=>> @
uA B
.B C
EmailC H
==I K
emailL Q
)Q R
;R S
} 	
}!! 
}"" íÍ
JC:\repositorio\TaskManagementSystem\src\Infra\Database\Seeds\AssetsDemo.cs
	namespace 	
Infra
 
. 
Database 
. 
Seeds 
; 
public 
static 
class 

AssetsDemo 
{ 
public 
static 
void 

AssetsSeed 
( 
this #
ModelBuilder$ 0
modelBuilder1 =
)= >
{		 
modelBuilder

 
.

 
Entity

 
<

 

AssetModel

  
>

  !
(

! "
)

" #
.

# $
HasData

$ +
( 
new 

AssetModel 
{ 
Id 
= 
$num	 

,
 
Symbol 

= 
$str 
, 
Name 
= 
$str )
,) *
AvailableQuantity+ <
== >
$num? H
,H I
Price 	
=
 
( 
decimal 
) 
$num 
} 
, 
new 

AssetModel 
{ 
Id 
= 
$num	 

,
 
Symbol 

= 
$str 
, 
Name 
= 
$str (
,( )
AvailableQuantity* ;
=< =
$num> G
,G H
Price 	
=
 
( 
decimal 
) 
$num 
} 
, 
new 

AssetModel 
{ 
Id 
= 
$num	 

,
 
Symbol 

= 
$str 
, 
Name 
= 
$str )
,) *
AvailableQuantity+ <
== >
$num? H
,H I
Price 	
=
 
( 
decimal 
) 
$num 
} 
, 
new 

AssetModel 
{ 
Id   
=   
$num  	 

,  
 
Symbol!! 

=!! 
$str!! 
,!! 
Name!! 
=!! 
$str!! $
,!!$ %
AvailableQuantity!!& 7
=!!8 9
$num!!: C
,!!C D
Price"" 	
=""
 
("" 
decimal"" 
)"" 
$num"" 
}## 
,## 
new$$ 

AssetModel$$ 
{%% 
Id&& 
=&& 
$num&&	 

,&&
 
Symbol'' 

='' 
$str'' 
,'' 
Name'' 
='' 
$str'' #
,''# $
AvailableQuantity''% 6
=''7 8
$num''9 B
,''B C
Price(( 	
=((
 
((( 
decimal(( 
)(( 
$num(( 
})) 
,)) 
new** 

AssetModel** 
{++ 
Id,, 
=,, 
$num,,	 

,,,
 
Symbol-- 

=-- 
$str-- 
,-- 
Name-- 
=-- 
$str-- !
,--! "
AvailableQuantity--# 4
=--5 6
$num--7 @
,--@ A
Price.. 	
=..
 
(.. 
decimal.. 
).. 
$num.. 
}// 
,// 
new00 

AssetModel00 
{11 
Id22 
=22 
$num22	 

,22
 
Symbol33 

=33 
$str33 
,33 
Name33 
=33 
$str33 (
,33( )
AvailableQuantity33* ;
=33< =
$num33> G
,33G H
Price44 	
=44
 
(44 
decimal44 
)44 
$num44 
}55 
,55 
new66 

AssetModel66 
{77 
Id88 
=88 
$num88	 

,88
 
Symbol88 
=88 
$str88 
,88 
Name88 "
=88# $
$str88% 3
,883 4
AvailableQuantity885 F
=88G H
$num88I R
,88R S
Price99 	
=99
 
(99 
decimal99 
)99 
$num99 
}:: 
,:: 
new;; 

AssetModel;; 
{<< 
Id== 
=== 
$num==	 
,== 
Symbol== 
=== 
$str== 
,== 
Name== #
===$ %
$str==& 4
,==4 5
AvailableQuantity==6 G
===H I
$num==J S
,==S T
Price>> 	
=>>
 
(>> 
decimal>> 
)>> 
$num>> 
}?? 
,?? 
new@@ 

AssetModel@@ 
{AA 
IdBB 
=BB 
$numBB	 
,BB 
SymbolBB 
=BB 
$strBB 
,BB 
NameBB #
=BB$ %
$strBB& 0
,BB0 1
AvailableQuantityBB2 C
=BBD E
$numBBF P
,BBP Q
PriceCC 	
=CC
 
(CC 
decimalCC 
)CC 
$numCC 
}DD 
,DD 
newEE 

AssetModelEE 
{FF 
IdGG 
=GG 
$numGG	 
,GG 
SymbolGG 
=GG 
$strGG 
,GG 
NameGG #
=GG$ %
$strGG& 0
,GG0 1
AvailableQuantityGG2 C
=GGD E
$numGGF O
,GGO P
PriceHH 	
=HH
 
(HH 
decimalHH 
)HH 
$numHH 
}II 
,II 
newJJ 

AssetModelJJ 
{KK 
IdLL 
=LL 
$numLL	 
,LL 
SymbolLL 
=LL 
$strLL 
,LL 
NameLL #
=LL$ %
$strLL& 1
,LL1 2
AvailableQuantityLL3 D
=LLE F
$numLLG P
,LLP Q
PriceMM 	
=MM
 
(MM 
decimalMM 
)MM 
$numMM 
}NN 
,NN 
newOO 

AssetModelOO 
{PP 
IdQQ 
=QQ 
$numQQ	 
,QQ 
SymbolQQ 
=QQ 
$strQQ 
,QQ 
NameQQ #
=QQ$ %
$strQQ& .
,QQ. /
AvailableQuantityQQ0 A
=QQB C
$numQQD N
,QQN O
PriceRR 	
=RR
 
(RR 
decimalRR 
)RR 
$numRR 
}SS 
,SS 
newTT 

AssetModelTT 
{UU 
IdVV 
=VV 
$numVV	 
,VV 
SymbolVV 
=VV 
$strVV 
,VV 
NameVV #
=VV$ %
$strVV& /
,VV/ 0
AvailableQuantityVV1 B
=VVC D
$numVVE N
,VVN O
PriceWW 	
=WW
 
(WW 
decimalWW 
)WW 
$numWW 
}XX 
,XX 
newYY 

AssetModelYY 
{ZZ 
Id[[ 
=[[ 
$num[[	 
,[[ 
Symbol[[ 
=[[ 
$str[[ 
,[[ 
Name[[ #
=[[$ %
$str[[& .
,[[. /
AvailableQuantity[[0 A
=[[B C
$num[[D N
,[[N O
Price\\ 	
=\\
 
(\\ 
decimal\\ 
)\\ 
$num\\ 
}]] 
,]] 
new^^ 

AssetModel^^ 
{__ 
Id`` 
=`` 
$num``	 
,`` 
Symbol`` 
=`` 
$str`` 
,`` 
Name``  $
=``% &
$str``' 3
,``3 4
AvailableQuantity``5 F
=``G H
$num``I S
,``S T
Priceaa 	
=aa
 
(aa 
decimalaa 
)aa 
$numaa 
}bb 
,bb 
newcc 

AssetModelcc 
{dd 
Idee 
=ee 
$numee	 
,ee 
Symbolee 
=ee 
$stree 
,ee 
Nameee #
=ee$ %
$stree& 4
,ee4 5
AvailableQuantityee6 G
=eeH I
$numeeJ S
,eeS T
Priceff 	
=ff
 
(ff 
decimalff 
)ff 
$numff 
}gg 
,gg 
newhh 

AssetModelhh 
{ii 
Idjj 
=jj 
$numjj	 
,jj 
Symboljj 
=jj 
$strjj 
,jj 
Namejj #
=jj$ %
$strjj& .
,jj. /
AvailableQuantityjj0 A
=jjB C
$numjjD N
,jjN O
Pricekk 	
=kk
 
(kk 
decimalkk 
)kk 
$numkk 
}ll 
,ll 
newmm 

AssetModelmm 
{nn 
Idoo 
=oo 
$numoo	 
,oo 
Symboloo 
=oo 
$stroo 
,oo 
Nameoo #
=oo$ %
$stroo& -
,oo- .
AvailableQuantityoo/ @
=ooA B
$numooC M
,ooM N
Pricepp 	
=pp
 
(pp 
decimalpp 
)pp 
$numpp 
}qq 
,qq 
newrr 

AssetModelrr 
{ss 
Idtt 
=tt 
$numtt	 
,tt 
Symboltt 
=tt 
$strtt 
,tt 
Namett #
=tt$ %
$strtt& -
,tt- .
AvailableQuantitytt/ @
=ttA B
$numttC M
,ttM N
Priceuu 	
=uu
 
(uu 
decimaluu 
)uu 
$numuu 
}vv 
,vv 
newww 

AssetModelww 
{xx 
Idyy 
=yy 
$numyy	 
,yy 
Symbolyy 
=yy 
$stryy 
,yy 
Nameyy #
=yy$ %
$stryy& 0
,yy0 1
AvailableQuantityyy2 C
=yyD E
$numyyF P
,yyP Q
Pricezz 	
=zz
 
(zz 
decimalzz 
)zz 
$numzz 
}{{ 
,{{ 
new|| 

AssetModel|| 
{}} 
Id~~ 
=~~ 
$num~~	 
,~~ 
Symbol~~ 
=~~ 
$str~~ 
,~~ 
Name~~ #
=~~$ %
$str~~& -
,~~- .
AvailableQuantity~~/ @
=~~A B
$num~~C M
,~~M N
Price 	
=
 
( 
decimal 
) 
$num 
}
ÄÄ 
,
ÄÄ 
new
ÅÅ 

AssetModel
ÅÅ 
{
ÇÇ 
Id
ÉÉ 
=
ÉÉ 
$num
ÉÉ	 
,
ÉÉ 
Symbol
ÉÉ 
=
ÉÉ 
$str
ÉÉ 
,
ÉÉ 
Name
ÉÉ #
=
ÉÉ$ %
$str
ÉÉ& -
,
ÉÉ- .
AvailableQuantity
ÉÉ/ @
=
ÉÉA B
$num
ÉÉC M
,
ÉÉM N
Price
ÑÑ 	
=
ÑÑ
 
(
ÑÑ 
decimal
ÑÑ 
)
ÑÑ 
$num
ÑÑ 
}
ÖÖ 
,
ÖÖ 
new
ÜÜ 

AssetModel
ÜÜ 
{
áá 
Id
àà 
=
àà 
$num
àà	 
,
àà 
Symbol
àà 
=
àà 
$str
àà 
,
àà 
Name
àà #
=
àà$ %
$str
àà& 4
,
àà4 5
AvailableQuantity
àà6 G
=
ààH I
$num
ààJ S
,
ààS T
Price
ââ 	
=
ââ
 
(
ââ 
decimal
ââ 
)
ââ 
$num
ââ 
}
ää 
,
ää 
new
ãã 

AssetModel
ãã 
{
åå 
Id
çç 
=
çç 
$num
çç	 
,
çç 
Symbol
çç 
=
çç 
$str
çç 
,
çç 
Name
çç #
=
çç$ %
$str
çç& 4
,
çç4 5
AvailableQuantity
çç6 G
=
ççH I
$num
ççJ T
,
ççT U
Price
éé 	
=
éé
 
(
éé 
decimal
éé 
)
éé 
$num
éé 
}
èè 
,
èè 
new
êê 

AssetModel
êê 
{
ëë 
Id
íí 
=
íí 
$num
íí	 
,
íí 
Symbol
íí 
=
íí 
$str
íí 
,
íí 
Name
íí #
=
íí$ %
$str
íí& 2
,
íí2 3
AvailableQuantity
íí4 E
=
ííF G
$num
ííH Q
,
ííQ R
Price
ìì 	
=
ìì
 
(
ìì 
decimal
ìì 
)
ìì 
$num
ìì 
}
îî 
,
îî 
new
ïï 

AssetModel
ïï 
{
ññ 
Id
óó 
=
óó 
$num
óó	 
,
óó 
Symbol
óó 
=
óó 
$str
óó 
,
óó 
Name
óó #
=
óó$ %
$str
óó& 4
,
óó4 5
AvailableQuantity
óó6 G
=
óóH I
$num
óóJ S
,
óóS T
Price
òò 	
=
òò
 
(
òò 
decimal
òò 
)
òò 
$num
òò 
}
ôô 
,
ôô 
new
öö 

AssetModel
öö 
{
õõ 
Id
úú 
=
úú 
$num
úú	 
,
úú 
Symbol
úú 
=
úú 
$str
úú 
,
úú 
Name
úú #
=
úú$ %
$str
úú& -
,
úú- .
AvailableQuantity
úú/ @
=
úúA B
$num
úúC L
,
úúL M
Price
ùù 	
=
ùù
 
(
ùù 
decimal
ùù 
)
ùù 
$num
ùù 
}
ûû 
,
ûû 
new
üü 

AssetModel
üü 
{
†† 
Id
°° 
=
°° 
$num
°°	 
,
°° 
Symbol
°° 
=
°° 
$str
°° 
,
°° 
Name
°° #
=
°°$ %
$str
°°& 3
,
°°3 4
AvailableQuantity
°°5 F
=
°°G H
$num
°°I R
,
°°R S
Price
¢¢ 	
=
¢¢
 
(
¢¢ 
decimal
¢¢ 
)
¢¢ 
$num
¢¢ 
}
££ 
,
££ 
new
§§ 

AssetModel
§§ 
{
•• 
Id
¶¶ 
=
¶¶ 
$num
¶¶	 
,
¶¶ 
Symbol
¶¶ 
=
¶¶ 
$str
¶¶ 
,
¶¶ 
Name
¶¶ #
=
¶¶$ %
$str
¶¶& 2
,
¶¶2 3
AvailableQuantity
¶¶4 E
=
¶¶F G
$num
¶¶H Q
,
¶¶Q R
Price
ßß 	
=
ßß
 
(
ßß 
decimal
ßß 
)
ßß 
$num
ßß 
}
®® 
,
®® 
new
©© 

AssetModel
©© 
{
™™ 
Id
´´ 
=
´´ 
$num
´´	 
,
´´ 
Symbol
´´ 
=
´´ 
$str
´´ 
,
´´ 
Name
´´ #
=
´´$ %
$str
´´& 2
,
´´2 3
AvailableQuantity
´´4 E
=
´´F G
$num
´´H Q
,
´´Q R
Price
¨¨ 	
=
¨¨
 
(
¨¨ 
decimal
¨¨ 
)
¨¨ 
$num
¨¨ 
}
≠≠ 
,
≠≠ 
new
ÆÆ 

AssetModel
ÆÆ 
{
ØØ 
Id
∞∞ 
=
∞∞ 
$num
∞∞	 
,
∞∞ 
Symbol
∞∞ 
=
∞∞ 
$str
∞∞ 
,
∞∞ 
Name
∞∞ #
=
∞∞$ %
$str
∞∞& /
,
∞∞/ 0
AvailableQuantity
∞∞1 B
=
∞∞C D
$num
∞∞E N
,
∞∞N O
Price
±± 	
=
±±
 
(
±± 
decimal
±± 
)
±± 
$num
±± 
}
≤≤ 
,
≤≤ 
new
≥≥ 

AssetModel
≥≥ 
{
¥¥ 
Id
µµ 
=
µµ 
$num
µµ	 
,
µµ 
Symbol
µµ 
=
µµ 
$str
µµ 
,
µµ 
Name
µµ #
=
µµ$ %
$str
µµ& 3
,
µµ3 4
AvailableQuantity
µµ5 F
=
µµG H
$num
µµI R
,
µµR S
Price
∂∂ 	
=
∂∂
 
(
∂∂ 
decimal
∂∂ 
)
∂∂ 
$num
∂∂ 
}
∑∑ 
,
∑∑ 
new
∏∏ 

AssetModel
∏∏ 
{
ππ 
Id
∫∫ 
=
∫∫ 
$num
∫∫	 
,
∫∫ 
Symbol
∫∫ 
=
∫∫ 
$str
∫∫ 
,
∫∫ 
Name
∫∫  $
=
∫∫% &
$str
∫∫' 1
,
∫∫1 2
AvailableQuantity
∫∫3 D
=
∫∫E F
$num
∫∫G P
,
∫∫P Q
Price
ªª 	
=
ªª
 
(
ªª 
decimal
ªª 
)
ªª 
$num
ªª 
}
ºº 
,
ºº 
new
ΩΩ 

AssetModel
ΩΩ 
{
ææ 
Id
øø 
=
øø 
$num
øø	 
,
øø 
Symbol
øø 
=
øø 
$str
øø 
,
øø 
Name
øø #
=
øø$ %
$str
øø& -
,
øø- .
AvailableQuantity
øø/ @
=
øøA B
$num
øøC M
,
øøM N
Price
¿¿ 	
=
¿¿
 
(
¿¿ 
decimal
¿¿ 
)
¿¿ 
$num
¿¿ 
}
¡¡ 
,
¡¡ 
new
¬¬ 

AssetModel
¬¬ 
{
√√ 
Id
ƒƒ 
=
ƒƒ 
$num
ƒƒ	 
,
ƒƒ 
Symbol
ƒƒ 
=
ƒƒ 
$str
ƒƒ 
,
ƒƒ 
Name
ƒƒ #
=
ƒƒ$ %
$str
ƒƒ& 4
,
ƒƒ4 5
AvailableQuantity
ƒƒ6 G
=
ƒƒH I
$num
ƒƒJ S
,
ƒƒS T
Price
≈≈ 	
=
≈≈
 
(
≈≈ 
decimal
≈≈ 
)
≈≈ 
$num
≈≈ 
}
∆∆ 
,
∆∆ 
new
«« 

AssetModel
«« 
{
»» 
Id
…… 
=
…… 
$num
……	 
,
…… 
Symbol
…… 
=
…… 
$str
…… 
,
…… 
Name
…… #
=
……$ %
$str
……& 2
,
……2 3
AvailableQuantity
……4 E
=
……F G
$num
……H R
,
……R S
Price
   	
=
  
 
(
   
decimal
   
)
   
$num
   
}
ÀÀ 
,
ÀÀ 
new
ÃÃ 

AssetModel
ÃÃ 
{
ÕÕ 
Id
ŒŒ 
=
ŒŒ 
$num
ŒŒ	 
,
ŒŒ 
Symbol
ŒŒ 
=
ŒŒ 
$str
ŒŒ 
,
ŒŒ 
Name
ŒŒ #
=
ŒŒ$ %
$str
ŒŒ& -
,
ŒŒ- .
AvailableQuantity
ŒŒ/ @
=
ŒŒA B
$num
ŒŒC L
,
ŒŒL M
Price
œœ 	
=
œœ
 
(
œœ 
decimal
œœ 
)
œœ 
$num
œœ 
}
–– 
,
–– 
new
—— 

AssetModel
—— 
{
““ 
Id
”” 
=
”” 
$num
””	 
,
”” 
Symbol
”” 
=
”” 
$str
”” 
,
”” 
Name
”” #
=
””$ %
$str
””& .
,
””. /
AvailableQuantity
””0 A
=
””B C
$num
””D M
,
””M N
Price
‘‘ 	
=
‘‘
 
(
‘‘ 
decimal
‘‘ 
)
‘‘ 
$num
‘‘ 
}
’’ 
,
’’ 
new
÷÷ 

AssetModel
÷÷ 
{
◊◊ 
Id
ÿÿ 
=
ÿÿ 
$num
ÿÿ	 
,
ÿÿ 
Symbol
ÿÿ 
=
ÿÿ 
$str
ÿÿ 
,
ÿÿ 
Name
ÿÿ #
=
ÿÿ$ %
$str
ÿÿ& .
,
ÿÿ. /
AvailableQuantity
ÿÿ0 A
=
ÿÿB C
$num
ÿÿD N
,
ÿÿN O
Price
ŸŸ 	
=
ŸŸ
 
(
ŸŸ 
decimal
ŸŸ 
)
ŸŸ 
$num
ŸŸ 
}
⁄⁄ 
,
⁄⁄ 
new
€€ 

AssetModel
€€ 
{
‹‹ 
Id
›› 
=
›› 
$num
››	 
,
›› 
Symbol
›› 
=
›› 
$str
›› 
,
›› 
Name
›› #
=
››$ %
$str
››& 2
,
››2 3
AvailableQuantity
››4 E
=
››F G
$num
››H Q
,
››Q R
Price
ﬁﬁ 	
=
ﬁﬁ
 
(
ﬁﬁ 
decimal
ﬁﬁ 
)
ﬁﬁ 
$num
ﬁﬁ 
}
ﬂﬂ 
,
ﬂﬂ 
new
‡‡ 

AssetModel
‡‡ 
{
·· 
Id
‚‚ 
=
‚‚ 
$num
‚‚	 
,
‚‚ 
Symbol
‚‚ 
=
‚‚ 
$str
‚‚ 
,
‚‚ 
Name
‚‚ #
=
‚‚$ %
$str
‚‚& +
,
‚‚+ ,
AvailableQuantity
‚‚- >
=
‚‚? @
$num
‚‚A J
,
‚‚J K
Price
„„ 	
=
„„
 
(
„„ 
decimal
„„ 
)
„„ 
$num
„„ 
}
‰‰ 
,
‰‰ 
new
ÂÂ 

AssetModel
ÂÂ 
{
ÊÊ 
Id
ÁÁ 
=
ÁÁ 
$num
ÁÁ	 
,
ÁÁ 
Symbol
ÁÁ 
=
ÁÁ 
$str
ÁÁ 
,
ÁÁ 
Name
ÁÁ #
=
ÁÁ$ %
$str
ÁÁ& 4
,
ÁÁ4 5
AvailableQuantity
ÁÁ6 G
=
ÁÁH I
$num
ÁÁJ S
,
ÁÁS T
Price
ËË 	
=
ËË
 
(
ËË 
decimal
ËË 
)
ËË 
$num
ËË 
}
ÈÈ 
,
ÈÈ 
new
ÍÍ 

AssetModel
ÍÍ 
{
ÎÎ 
Id
ÏÏ 
=
ÏÏ 
$num
ÏÏ	 
,
ÏÏ 
Symbol
ÏÏ 
=
ÏÏ 
$str
ÏÏ 
,
ÏÏ 
Name
ÏÏ #
=
ÏÏ$ %
$str
ÏÏ& 2
,
ÏÏ2 3
AvailableQuantity
ÏÏ4 E
=
ÏÏF G
$num
ÏÏH Q
,
ÏÏQ R
Price
ÌÌ 	
=
ÌÌ
 
(
ÌÌ 
decimal
ÌÌ 
)
ÌÌ 
$num
ÌÌ 
}
ÓÓ 
,
ÓÓ 
new
ÔÔ 

AssetModel
ÔÔ 
{
 
Id
ÒÒ 
=
ÒÒ 
$num
ÒÒ	 
,
ÒÒ 
Symbol
ÒÒ 
=
ÒÒ 
$str
ÒÒ 
,
ÒÒ 
Name
ÒÒ #
=
ÒÒ$ %
$str
ÒÒ& /
,
ÒÒ/ 0
AvailableQuantity
ÒÒ1 B
=
ÒÒC D
$num
ÒÒE N
,
ÒÒN O
Price
ÚÚ 	
=
ÚÚ
 
(
ÚÚ 
decimal
ÚÚ 
)
ÚÚ 
$num
ÚÚ 
}
ÛÛ 
,
ÛÛ 
new
ÙÙ 

AssetModel
ÙÙ 
{
ıı 
Id
ˆˆ 
=
ˆˆ 
$num
ˆˆ	 
,
ˆˆ 
Symbol
ˆˆ 
=
ˆˆ 
$str
ˆˆ 
,
ˆˆ 
Name
ˆˆ #
=
ˆˆ$ %
$str
ˆˆ& .
,
ˆˆ. /
AvailableQuantity
ˆˆ0 A
=
ˆˆB C
$num
ˆˆD M
,
ˆˆM N
Price
˜˜ 	
=
˜˜
 
(
˜˜ 
decimal
˜˜ 
)
˜˜ 
$num
˜˜ 
}
¯¯ 
,
¯¯ 
new
˘˘ 

AssetModel
˘˘ 
{
˙˙ 
Id
˚˚ 
=
˚˚ 
$num
˚˚	 
,
˚˚ 
Symbol
˚˚ 
=
˚˚ 
$str
˚˚ 
,
˚˚ 
Name
˚˚  $
=
˚˚% &
$str
˚˚' 4
,
˚˚4 5
AvailableQuantity
˚˚6 G
=
˚˚H I
$num
˚˚J S
,
˚˚S T
Price
¸¸ 	
=
¸¸
 
(
¸¸ 
decimal
¸¸ 
)
¸¸ 
$num
¸¸ 
}
˝˝ 
,
˝˝ 
new
˛˛ 

AssetModel
˛˛ 
{
ˇˇ 
Id
ÄÄ 
=
ÄÄ 
$num
ÄÄ	 
,
ÄÄ 
Symbol
ÄÄ 
=
ÄÄ 
$str
ÄÄ 
,
ÄÄ 
Name
ÄÄ #
=
ÄÄ$ %
$str
ÄÄ& 4
,
ÄÄ4 5
AvailableQuantity
ÄÄ6 G
=
ÄÄH I
$num
ÄÄJ T
,
ÄÄT U
Price
ÅÅ 	
=
ÅÅ
 
(
ÅÅ 
decimal
ÅÅ 
)
ÅÅ 
$num
ÅÅ 
}
ÇÇ 
,
ÇÇ 
new
ÉÉ 

AssetModel
ÉÉ 
{
ÑÑ 
Id
ÖÖ 
=
ÖÖ 
$num
ÖÖ	 
,
ÖÖ 
Symbol
ÖÖ 
=
ÖÖ 
$str
ÖÖ 
,
ÖÖ 
Name
ÖÖ #
=
ÖÖ$ %
$str
ÖÖ& .
,
ÖÖ. /
AvailableQuantity
ÖÖ0 A
=
ÖÖB C
$num
ÖÖD M
,
ÖÖM N
Price
ÜÜ 	
=
ÜÜ
 
(
ÜÜ 
decimal
ÜÜ 
)
ÜÜ 
$num
ÜÜ 
}
áá 
,
áá 
new
àà 

AssetModel
àà 
{
ââ 
Id
ää 
=
ää 
$num
ää	 
,
ää 
Symbol
ää 
=
ää 
$str
ää 
,
ää 
Name
ää #
=
ää$ %
$str
ää& 4
,
ää4 5
AvailableQuantity
ää6 G
=
ääH I
$num
ääJ S
,
ääS T
Price
ãã 	
=
ãã
 
(
ãã 
decimal
ãã 
)
ãã 
$num
ãã 
}
åå 
,
åå 
new
çç 

AssetModel
çç 
{
éé 
Id
èè 
=
èè 
$num
èè	 
,
èè 
Symbol
èè 
=
èè 
$str
èè 
,
èè 
Name
èè #
=
èè$ %
$str
èè& +
,
èè+ ,
AvailableQuantity
èè- >
=
èè? @
$num
èèA K
,
èèK L
Price
êê 	
=
êê
 
(
êê 
decimal
êê 
)
êê 
$num
êê 
}
ëë 
,
ëë 
new
íí 

AssetModel
íí 
{
ìì 
Id
îî 
=
îî 
$num
îî	 
,
îî 
Symbol
îî 
=
îî 
$str
îî 
,
îî 
Name
îî #
=
îî$ %
$str
îî& 1
,
îî1 2
AvailableQuantity
îî3 D
=
îîE F
$num
îîG P
,
îîP Q
Price
ïï 	
=
ïï
 
(
ïï 
decimal
ïï 
)
ïï 
$num
ïï 
}
ññ 
,
ññ 
new
óó 

AssetModel
óó 
{
òò 
Id
ôô 
=
ôô 
$num
ôô	 
,
ôô 
Symbol
ôô 
=
ôô 
$str
ôô 
,
ôô 
Name
ôô  $
=
ôô% &
$str
ôô' 3
,
ôô3 4
AvailableQuantity
ôô5 F
=
ôôG H
$num
ôôI R
,
ôôR S
Price
öö 	
=
öö
 
(
öö 
decimal
öö 
)
öö 
$num
öö 
}
õõ 
,
õõ 
new
úú 

AssetModel
úú 
{
ùù 
Id
ûû 
=
ûû 
$num
ûû	 
,
ûû 
Symbol
ûû 
=
ûû 
$str
ûû 
,
ûû 
Name
ûû #
=
ûû$ %
$str
ûû& 0
,
ûû0 1
AvailableQuantity
ûû2 C
=
ûûD E
$num
ûûF O
,
ûûO P
Price
üü 	
=
üü
 
(
üü 
decimal
üü 
)
üü 
$num
üü 
}
†† 
,
†† 
new
°° 

AssetModel
°° 
{
¢¢ 
Id
££ 
=
££ 
$num
££	 
,
££ 
Symbol
££ 
=
££ 
$str
££ 
,
££ 
Name
££ #
=
££$ %
$str
££& /
,
££/ 0
AvailableQuantity
££1 B
=
££C D
$num
££E N
,
££N O
Price
§§ 	
=
§§
 
(
§§ 
decimal
§§ 
)
§§ 
$num
§§ 
}
•• 
,
•• 
new
¶¶ 

AssetModel
¶¶ 
{
ßß 
Id
®® 
=
®® 
$num
®®	 
,
®® 
Symbol
®® 
=
®® 
$str
®® 
,
®® 
Name
®® #
=
®®$ %
$str
®®& 4
,
®®4 5
AvailableQuantity
®®6 G
=
®®H I
$num
®®J S
,
®®S T
Price
©© 	
=
©©
 
(
©© 
decimal
©© 
)
©© 
$num
©© 
}
™™ 
,
™™ 
new
´´ 

AssetModel
´´ 
{
¨¨ 
Id
≠≠ 
=
≠≠ 
$num
≠≠	 
,
≠≠ 
Symbol
≠≠ 
=
≠≠ 
$str
≠≠ 
,
≠≠ 
Name
≠≠ #
=
≠≠$ %
$str
≠≠& 3
,
≠≠3 4
AvailableQuantity
≠≠5 F
=
≠≠G H
$num
≠≠I R
,
≠≠R S
Price
ÆÆ 	
=
ÆÆ
 
(
ÆÆ 
decimal
ÆÆ 
)
ÆÆ 
$num
ÆÆ 
}
ØØ 
,
ØØ 
new
∞∞ 

AssetModel
∞∞ 
{
±± 
Id
≤≤ 
=
≤≤ 
$num
≤≤	 
,
≤≤ 
Symbol
≤≤ 
=
≤≤ 
$str
≤≤ 
,
≤≤ 
Name
≤≤ #
=
≤≤$ %
$str
≤≤& /
,
≤≤/ 0
AvailableQuantity
≤≤1 B
=
≤≤C D
$num
≤≤E N
,
≤≤N O
Price
≥≥ 	
=
≥≥
 
(
≥≥ 
decimal
≥≥ 
)
≥≥ 
$num
≥≥ 
}
¥¥ 
,
¥¥ 
new
µµ 

AssetModel
µµ 
{
∂∂ 
Id
∑∑ 
=
∑∑ 
$num
∑∑	 
,
∑∑ 
Symbol
∑∑ 
=
∑∑ 
$str
∑∑ 
,
∑∑ 
Name
∑∑ #
=
∑∑$ %
$str
∑∑& .
,
∑∑. /
AvailableQuantity
∑∑0 A
=
∑∑B C
$num
∑∑D M
,
∑∑M N
Price
∏∏ 	
=
∏∏
 
(
∏∏ 
decimal
∏∏ 
)
∏∏ 
$num
∏∏ 
}
ππ 
,
ππ 
new
∫∫ 

AssetModel
∫∫ 
{
ªª 
Id
ºº 
=
ºº 
$num
ºº	 
,
ºº 
Symbol
ºº 
=
ºº 
$str
ºº 
,
ºº 
Name
ºº #
=
ºº$ %
$str
ºº& /
,
ºº/ 0
AvailableQuantity
ºº1 B
=
ººC D
$num
ººE N
,
ººN O
Price
ΩΩ 	
=
ΩΩ
 
(
ΩΩ 
decimal
ΩΩ 
)
ΩΩ 
$num
ΩΩ 
}
ææ 
,
ææ 
new
øø 

AssetModel
øø 
{
¿¿ 
Id
¡¡ 
=
¡¡ 
$num
¡¡	 
,
¡¡ 
Symbol
¡¡ 
=
¡¡ 
$str
¡¡ 
,
¡¡ 
Name
¡¡ #
=
¡¡$ %
$str
¡¡& +
,
¡¡+ ,
AvailableQuantity
¡¡- >
=
¡¡? @
$num
¡¡A J
,
¡¡J K
Price
¬¬ 	
=
¬¬
 
(
¬¬ 
decimal
¬¬ 
)
¬¬ 
$num
¬¬ 
}
√√ 
,
√√ 
new
ƒƒ 

AssetModel
ƒƒ 
{
≈≈ 
Id
∆∆ 
=
∆∆ 
$num
∆∆	 
,
∆∆ 
Symbol
∆∆ 
=
∆∆ 
$str
∆∆ 
,
∆∆ 
Name
∆∆ #
=
∆∆$ %
$str
∆∆& 1
,
∆∆1 2
AvailableQuantity
∆∆3 D
=
∆∆E F
$num
∆∆G P
,
∆∆P Q
Price
«« 	
=
««
 
(
«« 
decimal
«« 
)
«« 
$num
«« 
}
»» 
,
»» 
new
…… 

AssetModel
…… 
{
   
Id
ÀÀ 
=
ÀÀ 
$num
ÀÀ	 
,
ÀÀ 
Symbol
ÀÀ 
=
ÀÀ 
$str
ÀÀ 
,
ÀÀ 
Name
ÀÀ #
=
ÀÀ$ %
$str
ÀÀ& 3
,
ÀÀ3 4
AvailableQuantity
ÀÀ5 F
=
ÀÀG H
$num
ÀÀI R
,
ÀÀR S
Price
ÃÃ 	
=
ÃÃ
 
(
ÃÃ 
decimal
ÃÃ 
)
ÃÃ 
$num
ÃÃ 
}
ÕÕ 
,
ÕÕ 
new
ŒŒ 

AssetModel
ŒŒ 
{
œœ 
Id
–– 
=
–– 
$num
––	 
,
–– 
Symbol
–– 
=
–– 
$str
–– 
,
–– 
Name
–– #
=
––$ %
$str
––& 1
,
––1 2
AvailableQuantity
––3 D
=
––E F
$num
––G P
,
––P Q
Price
—— 	
=
——
 
(
—— 
decimal
—— 
)
—— 
$num
—— 
}
““ 
,
““ 
new
”” 

AssetModel
”” 
{
‘‘ 
Id
’’ 
=
’’ 
$num
’’	 
,
’’ 
Symbol
’’ 
=
’’ 
$str
’’ 
,
’’ 
Name
’’ #
=
’’$ %
$str
’’& 1
,
’’1 2
AvailableQuantity
’’3 D
=
’’E F
$num
’’G P
,
’’P Q
Price
÷÷ 	
=
÷÷
 
(
÷÷ 
decimal
÷÷ 
)
÷÷ 
$num
÷÷ 
}
◊◊ 
,
◊◊ 
new
ÿÿ 

AssetModel
ÿÿ 
{
ŸŸ 
Id
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄	 
,
⁄⁄ 
Symbol
⁄⁄ 
=
⁄⁄ 
$str
⁄⁄ 
,
⁄⁄ 
Name
⁄⁄ #
=
⁄⁄$ %
$str
⁄⁄& 0
,
⁄⁄0 1
AvailableQuantity
⁄⁄2 C
=
⁄⁄D E
$num
⁄⁄F O
,
⁄⁄O P
Price
€€ 	
=
€€
 
(
€€ 
decimal
€€ 
)
€€ 
$num
€€ 
}
‹‹ 
,
‹‹ 
new
›› 

AssetModel
›› 
{
ﬁﬁ 
Id
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ	 
,
ﬂﬂ 
Symbol
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ 
,
ﬂﬂ 
Name
ﬂﬂ #
=
ﬂﬂ$ %
$str
ﬂﬂ& ,
,
ﬂﬂ, -
AvailableQuantity
ﬂﬂ. ?
=
ﬂﬂ@ A
$num
ﬂﬂB K
,
ﬂﬂK L
Price
‡‡ 	
=
‡‡
 
(
‡‡ 
decimal
‡‡ 
)
‡‡ 
$num
‡‡ 
}
·· 
,
·· 
new
‚‚ 

AssetModel
‚‚ 
{
„„ 
Id
‰‰ 
=
‰‰ 
$num
‰‰	 
,
‰‰ 
Symbol
‰‰ 
=
‰‰ 
$str
‰‰ 
,
‰‰ 
Name
‰‰ #
=
‰‰$ %
$str
‰‰& 4
,
‰‰4 5
AvailableQuantity
‰‰6 G
=
‰‰H I
$num
‰‰J R
,
‰‰R S
Price
ÂÂ 	
=
ÂÂ
 
(
ÂÂ 
decimal
ÂÂ 
)
ÂÂ 
$num
ÂÂ 
}
ÊÊ 
,
ÊÊ 
new
ÁÁ 

AssetModel
ÁÁ 
{
ËË 
Id
ÈÈ 
=
ÈÈ 
$num
ÈÈ	 
,
ÈÈ 
Symbol
ÈÈ 
=
ÈÈ 
$str
ÈÈ 
,
ÈÈ 
Name
ÈÈ #
=
ÈÈ$ %
$str
ÈÈ& 1
,
ÈÈ1 2
AvailableQuantity
ÈÈ3 D
=
ÈÈE F
$num
ÈÈG P
,
ÈÈP Q
Price
ÍÍ 	
=
ÍÍ
 
(
ÍÍ 
decimal
ÍÍ 
)
ÍÍ 
$num
ÍÍ 
}
ÎÎ 
,
ÎÎ 
new
ÏÏ 

AssetModel
ÏÏ 
{
ÌÌ 
Id
ÓÓ 
=
ÓÓ 
$num
ÓÓ	 
,
ÓÓ 
Symbol
ÓÓ 
=
ÓÓ 
$str
ÓÓ 
,
ÓÓ 
Name
ÓÓ #
=
ÓÓ$ %
$str
ÓÓ& 4
,
ÓÓ4 5
AvailableQuantity
ÓÓ6 G
=
ÓÓH I
$num
ÓÓJ T
,
ÓÓT U
Price
ÔÔ 	
=
ÔÔ
 
(
ÔÔ 
decimal
ÔÔ 
)
ÔÔ 
$num
ÔÔ 
}
 
,
 
new
ÒÒ 

AssetModel
ÒÒ 
{
ÚÚ 
Id
ÛÛ 
=
ÛÛ 
$num
ÛÛ	 
,
ÛÛ 
Symbol
ÛÛ 
=
ÛÛ 
$str
ÛÛ 
,
ÛÛ 
Name
ÛÛ #
=
ÛÛ$ %
$str
ÛÛ& 1
,
ÛÛ1 2
AvailableQuantity
ÛÛ3 D
=
ÛÛE F
$num
ÛÛG P
,
ÛÛP Q
Price
ÙÙ 	
=
ÙÙ
 
(
ÙÙ 
decimal
ÙÙ 
)
ÙÙ 
$num
ÙÙ 
}
ıı 
,
ıı 
new
ˆˆ 

AssetModel
ˆˆ 
{
˜˜ 
Id
¯¯ 
=
¯¯ 
$num
¯¯	 
,
¯¯ 
Symbol
¯¯ 
=
¯¯ 
$str
¯¯ 
,
¯¯ 
Name
¯¯ #
=
¯¯$ %
$str
¯¯& /
,
¯¯/ 0
AvailableQuantity
¯¯1 B
=
¯¯C D
$num
¯¯E O
,
¯¯O P
Price
˘˘ 	
=
˘˘
 
(
˘˘ 
decimal
˘˘ 
)
˘˘ 
$num
˘˘ 
}
˙˙ 
,
˙˙ 
new
˚˚ 

AssetModel
˚˚ 
{
¸¸ 
Id
˝˝ 
=
˝˝ 
$num
˝˝	 
,
˝˝ 
Symbol
˝˝ 
=
˝˝ 
$str
˝˝ 
,
˝˝ 
Name
˝˝ #
=
˝˝$ %
$str
˝˝& .
,
˝˝. /
AvailableQuantity
˝˝0 A
=
˝˝B C
$num
˝˝D M
,
˝˝M N
Price
˛˛ 	
=
˛˛
 
(
˛˛ 
decimal
˛˛ 
)
˛˛ 
$num
˛˛ 
}
ˇˇ 
,
ˇˇ 
new
ÄÄ 

AssetModel
ÄÄ 
{
ÅÅ 
Id
ÇÇ 
=
ÇÇ 
$num
ÇÇ	 
,
ÇÇ 
Symbol
ÇÇ 
=
ÇÇ 
$str
ÇÇ 
,
ÇÇ 
Name
ÇÇ  $
=
ÇÇ% &
$str
ÇÇ' 5
,
ÇÇ5 6
AvailableQuantity
ÇÇ7 H
=
ÇÇI J
$num
ÇÇK T
,
ÇÇT U
Price
ÉÉ 	
=
ÉÉ
 
(
ÉÉ 
decimal
ÉÉ 
)
ÉÉ 
$num
ÉÉ 
}
ÑÑ 
,
ÑÑ 
new
ÖÖ 

AssetModel
ÖÖ 
{
ÜÜ 
Id
áá 
=
áá 
$num
áá	 
,
áá 
Symbol
áá 
=
áá 
$str
áá 
,
áá 
Name
áá #
=
áá$ %
$str
áá& 4
,
áá4 5
AvailableQuantity
áá6 G
=
ááH I
$num
ááJ S
,
ááS T
Price
àà 	
=
àà
 
(
àà 
decimal
àà 
)
àà 
$num
àà 
}
ââ 
,
ââ 
new
ää 

AssetModel
ää 
{
ãã 
Id
åå 
=
åå 
$num
åå	 
,
åå 
Symbol
åå 
=
åå 
$str
åå 
,
åå 
Name
åå #
=
åå$ %
$str
åå& 4
,
åå4 5
AvailableQuantity
åå6 G
=
ååH I
$num
ååJ R
,
ååR S
Price
çç 	
=
çç
 
(
çç 
decimal
çç 
)
çç 
$num
çç 
}
éé 
,
éé 
new
èè 

AssetModel
èè 
{
êê 
Id
ëë 
=
ëë 
$num
ëë	 
,
ëë 
Symbol
ëë 
=
ëë 
$str
ëë 
,
ëë 
Name
ëë  $
=
ëë% &
$str
ëë' 4
,
ëë4 5
AvailableQuantity
ëë6 G
=
ëëH I
$num
ëëJ S
,
ëëS T
Price
íí 	
=
íí
 
(
íí 
decimal
íí 
)
íí 
$num
íí 
}
ìì 
,
ìì 
new
îî 

AssetModel
îî 
{
ïï 
Id
ññ 
=
ññ 
$num
ññ	 
,
ññ 
Symbol
ññ 
=
ññ 
$str
ññ 
,
ññ 
Name
ññ #
=
ññ$ %
$str
ññ& 1
,
ññ1 2
AvailableQuantity
ññ3 D
=
ññE F
$num
ññG P
,
ññP Q
Price
óó 	
=
óó
 
(
óó 
decimal
óó 
)
óó 
$num
óó 
}
òò 
,
òò 
new
ôô 

AssetModel
ôô 
{
öö 
Id
õõ 
=
õõ 
$num
õõ	 
,
õõ 
Symbol
õõ 
=
õõ 
$str
õõ 
,
õõ 
Name
õõ  $
=
õõ% &
$str
õõ' .
,
õõ. /
AvailableQuantity
õõ0 A
=
õõB C
$num
õõD M
,
õõM N
Price
úú 	
=
úú
 
(
úú 
decimal
úú 
)
úú 
$num
úú 
}
ùù 
,
ùù 
new
ûû 

AssetModel
ûû 
{
üü 
Id
†† 
=
†† 
$num
††	 
,
†† 
Symbol
†† 
=
†† 
$str
†† 
,
†† 
Name
†† #
=
††$ %
$str
††& 4
,
††4 5
AvailableQuantity
††6 G
=
††H I
$num
††J S
,
††S T
Price
°° 	
=
°°
 
(
°° 
decimal
°° 
)
°° 
$num
°° 
}
¢¢ 
,
¢¢ 
new
££ 

AssetModel
££ 
{
§§ 
Id
•• 
=
•• 
$num
••	 
,
•• 
Symbol
•• 
=
•• 
$str
•• 
,
•• 
Name
•• #
=
••$ %
$str
••& +
,
••+ ,
AvailableQuantity
••- >
=
••? @
$num
••A J
,
••J K
Price
¶¶ 	
=
¶¶
 
(
¶¶ 
decimal
¶¶ 
)
¶¶ 
$num
¶¶ 
}
ßß 
,
ßß 
new
®® 

AssetModel
®® 
{
©© 
Id
™™ 
=
™™ 
$num
™™	 
,
™™ 
Symbol
™™ 
=
™™ 
$str
™™ 
,
™™ 
Name
™™ #
=
™™$ %
$str
™™& -
,
™™- .
AvailableQuantity
™™/ @
=
™™A B
$num
™™C L
,
™™L M
Price
´´ 	
=
´´
 
(
´´ 
decimal
´´ 
)
´´ 
$num
´´ 
}
¨¨ 
,
¨¨ 
new
≠≠ 

AssetModel
≠≠ 
{
ÆÆ 
Id
ØØ 
=
ØØ 
$num
ØØ	 
,
ØØ 
Symbol
ØØ 
=
ØØ 
$str
ØØ 
,
ØØ 
Name
ØØ #
=
ØØ$ %
$str
ØØ& 0
,
ØØ0 1
AvailableQuantity
ØØ2 C
=
ØØD E
$num
ØØF P
,
ØØP Q
Price
∞∞ 	
=
∞∞
 
(
∞∞ 
decimal
∞∞ 
)
∞∞ 
$num
∞∞ 
}
±± 
,
±± 
new
≤≤ 

AssetModel
≤≤ 
{
≥≥ 
Id
¥¥ 
=
¥¥ 
$num
¥¥	 
,
¥¥ 
Symbol
¥¥ 
=
¥¥ 
$str
¥¥ 
,
¥¥ 
Name
¥¥ #
=
¥¥$ %
$str
¥¥& 0
,
¥¥0 1
AvailableQuantity
¥¥2 C
=
¥¥D E
$num
¥¥F O
,
¥¥O P
Price
µµ 	
=
µµ
 
(
µµ 
decimal
µµ 
)
µµ 
$num
µµ 
}
∂∂ 
,
∂∂ 
new
∑∑ 

AssetModel
∑∑ 
{
∏∏ 
Id
ππ 
=
ππ 
$num
ππ	 
,
ππ 
Symbol
ππ 
=
ππ 
$str
ππ 
,
ππ 
Name
ππ #
=
ππ$ %
$str
ππ& ,
,
ππ, -
AvailableQuantity
ππ. ?
=
ππ@ A
$num
ππB K
,
ππK L
Price
∫∫ 	
=
∫∫
 
(
∫∫ 
decimal
∫∫ 
)
∫∫ 
$num
∫∫ 
}
ªª 
,
ªª 
new
ºº 

AssetModel
ºº 
{
ΩΩ 
Id
ææ 
=
ææ 
$num
ææ	 
,
ææ 
Symbol
ææ 
=
ææ 
$str
ææ 
,
ææ 
Name
ææ #
=
ææ$ %
$str
ææ& +
,
ææ+ ,
AvailableQuantity
ææ- >
=
ææ? @
$num
ææA K
,
ææK L
Price
øø 	
=
øø
 
(
øø 
decimal
øø 
)
øø 
$num
øø 
}
¿¿ 
,
¿¿ 
new
¡¡ 

AssetModel
¡¡ 
{
¬¬ 
Id
√√ 
=
√√ 
$num
√√	 
,
√√ 
Symbol
√√ 
=
√√ 
$str
√√ 
,
√√ 
Name
√√ #
=
√√$ %
$str
√√& -
,
√√- .
AvailableQuantity
√√/ @
=
√√A B
$num
√√C M
,
√√M N
Price
ƒƒ 	
=
ƒƒ
 
(
ƒƒ 
decimal
ƒƒ 
)
ƒƒ 
$num
ƒƒ 
}
≈≈ 
,
≈≈ 
new
∆∆ 

AssetModel
∆∆ 
{
«« 
Id
»» 
=
»» 
$num
»»	 
,
»» 
Symbol
»» 
=
»» 
$str
»» 
,
»» 
Name
»» #
=
»»$ %
$str
»»& +
,
»»+ ,
AvailableQuantity
»»- >
=
»»? @
$num
»»A K
,
»»K L
Price
…… 	
=
……
 
(
…… 
decimal
…… 
)
…… 
$num
…… 
}
   
,
   
new
ÀÀ 

AssetModel
ÀÀ 
{
ÃÃ 
Id
ÕÕ 
=
ÕÕ 
$num
ÕÕ	 
,
ÕÕ 
Symbol
ÕÕ 
=
ÕÕ 
$str
ÕÕ 
,
ÕÕ 
Name
ÕÕ #
=
ÕÕ$ %
$str
ÕÕ& 2
,
ÕÕ2 3
AvailableQuantity
ÕÕ4 E
=
ÕÕF G
$num
ÕÕH Q
,
ÕÕQ R
Price
ŒŒ 	
=
ŒŒ
 
(
ŒŒ 
decimal
ŒŒ 
)
ŒŒ 
$num
ŒŒ 
}
œœ 
,
œœ 
new
–– 

AssetModel
–– 
{
—— 
Id
““ 
=
““ 
$num
““	 
,
““ 
Symbol
”” 

=
”” 
$str
”” 
,
”” 
Name
”” 
=
”” 
$str
”” +
,
””+ ,
AvailableQuantity
””- >
=
””? @
$num
””A J
,
””J K
Price
‘‘ 	
=
‘‘
 
(
‘‘ 
decimal
‘‘ 
)
‘‘ 
$num
‘‘ 
}
’’ 
)
÷÷ 
;
÷÷ 
}
◊◊ 
}ÿÿ 