…
HC:\git\TaskManagementSystem\src\Infra\Database\Config\DatabaseOptions.cs
	namespace 	
Infra
 
. 
Database 
. 
Config 
;  
[ #
ExcludeFromCodeCoverage 
] 
public 
class 
DatabaseOptions 
{ 
public 
string 
MySqlConnection 
{  
get! $
;$ %
init& *
;* +
}, -
=. /
null0 4
!4 5
;5 6
}		 Ù8
NC:\git\TaskManagementSystem\src\Infra\Database\Context\ApplicationDbContext.cs
	namespace 	
Infra
 
. 
Database 
. 
Context  
;  !
[ #
ExcludeFromCodeCoverage 
] 
public		 
class		  
ApplicationDbContext		 !
:		" #
	DbContext		$ -
{

 
public 
 
ApplicationDbContext 
(  
DbContextOptions  0
<0 1 
ApplicationDbContext1 E
>E F
optionsG N
)N O
: 	
base
 
( 
options 
) 
{ 
} 
public 

DbSet 
< 
User 
> 
Users 
{ 
get "
;" #
set$ '
;' (
}) *
public 

DbSet 
< 
Category 
> 

Categories %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 

DbSet 
< 
Tasks 
> 
Tasks 
{ 
get  #
;# $
set% (
;( )
}* +
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
base 
. 
OnModelCreating 
( 
modelBuilder )
)) *
;* +
modelBuilder 
. 
Entity 
< 
User  
>  !
(! "
entity" (
=>) +
{ 	
entity 
. 
HasKey 
( 
e 
=> 
e  
.  !
Id! #
)# $
;$ %
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Name# '
)' (
. 

IsRequired 
( 
) 
. 
HasMaxLength 
(  
$num  #
)# $
;$ %
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Email# (
)( )
. 

IsRequired 
( 
) 
. 
HasMaxLength 
(  
$num  #
)# $
;$ %
entity   
.   
Property   
(   
e   
=>    
e  ! "
.  " #
Password  # +
)  + ,
.!! 

IsRequired!! 
(!! 
)!! 
."" 
HasMaxLength"" 
(""  
$num""  #
)""# $
;""$ %
entity## 
.## 
HasMany## 
(## 
e## 
=>## 
e##  !
.##! "
Tasks##" '
)##' (
.$$ 
WithOne$$ 
($$ 
e$$ 
=>$$ 
e$$  !
.$$! "
User$$" &
)$$& '
.%% 
HasForeignKey%%  
(%%  !
e%%! "
=>%%# %
e%%& '
.%%' (
UserId%%( .
)%%. /
;%%/ 0
}&& 	
)&&	 

;&&
 
modelBuilder(( 
.(( 
Entity(( 
<(( 
Category(( $
>(($ %
(((% &
entity((& ,
=>((- /
{)) 	
entity** 
.** 
HasKey** 
(** 
e** 
=>** 
e**  
.**  !
Id**! #
)**# $
;**$ %
entity++ 
.++ 
Property++ 
(++ 
e++ 
=>++  
e++! "
.++" #
Name++# '
)++' (
.,, 

IsRequired,, 
(,, 
),, 
.-- 
HasMaxLength-- 
(--  
$num--  #
)--# $
;--$ %
entity.. 
... 
HasMany.. 
(.. 
e.. 
=>.. 
e..  !
...! "
Tasks.." '
)..' (
.// 
WithOne// 
(// 
e// 
=>// 
e//  !
.//! "
Category//" *
)//* +
.00 
HasForeignKey00  
(00  !
e00! "
=>00# %
e00& '
.00' (

CategoryId00( 2
)002 3
;003 4
}11 	
)11	 

;11
 
modelBuilder33 
.33 
Entity33 
<33 
Tasks33 !
>33! "
(33" #
entity33# )
=>33* ,
{44 	
entity55 
.55 
HasKey55 
(55 
e55 
=>55 
e55  
.55  !
Id55! #
)55# $
;55$ %
entity66 
.66 
Property66 
(66 
e66 
=>66  
e66! "
.66" #
Title66# (
)66( )
.77 

IsRequired77 
(77 
)77 
.88 
HasMaxLength88 
(88  
$num88  #
)88# $
;88$ %
entity99 
.99 
Property99 
(99 
e99 
=>99  
e99! "
.99" #
Description99# .
)99. /
.:: 
HasMaxLength:: 
(::  
$num::  $
)::$ %
;::% &
entity;; 
.;; 
Property;; 
(;; 
e;; 
=>;;  
e;;! "
.;;" #
DueDate;;# *
);;* +
.<< 

IsRequired<< 
(<< 
)<< 
;<<  
entity== 
.== 
Property== 
(== 
e== 
=>==  
e==! "
.==" #
IsCompleted==# .
)==. /
.>> 

IsRequired>> 
(>> 
)>> 
;>>  
entity?? 
.?? 
HasOne?? 
(?? 
e?? 
=>?? 
e??  
.??  !
User??! %
)??% &
.@@ 
WithMany@@ 
(@@ 
e@@ 
=>@@  
e@@! "
.@@" #
Tasks@@# (
)@@( )
.AA 
HasForeignKeyAA  
(AA  !
eAA! "
=>AA# %
eAA& '
.AA' (
UserIdAA( .
)AA. /
;AA/ 0
entityBB 
.BB 
HasOneBB 
(BB 
eBB 
=>BB 
eBB  
.BB  !
CategoryBB! )
)BB) *
.CC 
WithManyCC 
(CC 
eCC 
=>CC  
eCC! "
.CC" #
TasksCC# (
)CC( )
.DD 
HasForeignKeyDD  
(DD  !
eDD! "
=>DD# %
eDD& '
.DD' (

CategoryIdDD( 2
)DD2 3
;DD3 4
}EE 	
)EE	 

;EE
 
}FF 
}GG å
UC:\git\TaskManagementSystem\src\Infra\Database\Context\ApplicationDbContextFactory.cs
	namespace 	
Infra
 
. 
Database 
. 
Context  
;  !
public 
class '
ApplicationDbContextFactory (
:) *'
IDesignTimeDbContextFactory+ F
<F G 
ApplicationDbContextG [
>[ \
{ 
public  
ApplicationDbContext 
CreateDbContext ,
(, -
string- 3
[3 4
]4 5
args6 :
): ;
{		 
var

 
optionsBuilder

 
=

 
new

 #
DbContextOptionsBuilder

 2
<

2 3 
ApplicationDbContext

3 G
>

G H
(

H I
)

I J
;

J K
var 
connectionString 
= 
$str X
;X Y
optionsBuilder 
. 
UseMySql 
( 
connectionString 
, 
new 
MySqlServerVersion 
( 
ServerVersion 
. 

AutoDetect 
( 
connectionString -
)- .
) 
, 
options 

=> 
options 
. 
MigrationsAssembly (
(( )
$str) 0
)0 1
) 
; 
return 
new	  
ApplicationDbContext !
(! "
optionsBuilder" 0
.0 1
Options1 8
)8 9
;9 :
} 
} ÅÌ
SC:\git\TaskManagementSystem\src\Infra\Database\Migrations\20231203143122_Initial.cs
	namespace		 	
Infra		
 
.		 
Database		 
.		 

Migrations		 #
{

 
public 

partial 
class 
Initial  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterDatabase *
(* +
)+ ,
. 

Annotation 
( 
$str +
,+ ,
$str- 6
)6 7
;7 8
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
Symbol 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 B
,B C
nullableD L
:L M
falseN S
)S T
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 @
,@ A
nullableB J
:J K
falseL Q
)Q R
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
AvailableQuantity %
=& '
table( -
.- .
Column. 4
<4 5
int5 8
>8 9
(9 :
type: >
:> ?
$str@ E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
Price 
= 
table !
.! "
Column" (
<( )
decimal) 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
falseS X
)X Y
}   
,   
constraints!! 
:!! 
table!! "
=>!!# %
{"" 
table## 
.## 

PrimaryKey## $
(##$ %
$str##% 0
,##0 1
x##2 3
=>##4 6
x##7 8
.##8 9
Id##9 ;
)##; <
;##< =
}$$ 
)$$ 
.%% 

Annotation%% 
(%% 
$str%% +
,%%+ ,
$str%%- 6
)%%6 7
;%%7 8
migrationBuilder'' 
.'' 
CreateTable'' (
(''( )
name(( 
:(( 
$str(( 
,((  
columns)) 
:)) 
table)) 
=>)) !
new))" %
{** 
Id++ 
=++ 
table++ 
.++ 
Column++ %
<++% &
string++& ,
>++, -
(++- .
type++. 2
:++2 3
$str++4 B
,++B C
nullable++D L
:++L M
false++N S
)++S T
.,, 

Annotation,, #
(,,# $
$str,,$ 3
,,,3 4
$str,,5 >
),,> ?
,,,? @
Name-- 
=-- 
table--  
.--  !
Column--! '
<--' (
string--( .
>--. /
(--/ 0
type--0 4
:--4 5
$str--6 @
,--@ A
nullable--B J
:--J K
false--L Q
)--Q R
... 

Annotation.. #
(..# $
$str..$ 3
,..3 4
$str..5 >
)..> ?
,..? @
Email// 
=// 
table// !
.//! "
Column//" (
<//( )
string//) /
>/// 0
(//0 1
type//1 5
://5 6
$str//7 E
,//E F
nullable//G O
://O P
false//Q V
)//V W
.00 

Annotation00 #
(00# $
$str00$ 3
,003 4
$str005 >
)00> ?
,00? @
Password11 
=11 
table11 $
.11$ %
Column11% +
<11+ ,
string11, 2
>112 3
(113 4
type114 8
:118 9
$str11: D
,11D E
nullable11F N
:11N O
false11P U
)11U V
.22 

Annotation22 #
(22# $
$str22$ 3
,223 4
$str225 >
)22> ?
}33 
,33 
constraints44 
:44 
table44 "
=>44# %
{55 
table66 
.66 

PrimaryKey66 $
(66$ %
$str66% 1
,661 2
x663 4
=>665 7
x668 9
.669 :
Id66: <
)66< =
;66= >
}77 
)77 
.88 

Annotation88 
(88 
$str88 +
,88+ ,
$str88- 6
)886 7
;887 8
migrationBuilder:: 
.:: 
CreateTable:: (
(::( )
name;; 
:;; 
$str;;  
,;;  !
columns<< 
:<< 
table<< 
=><< !
new<<" %
{== 
Id>> 
=>> 
table>> 
.>> 
Column>> %
<>>% &
string>>& ,
>>>, -
(>>- .
type>>. 2
:>>2 3
$str>>4 B
,>>B C
nullable>>D L
:>>L M
false>>N S
)>>S T
.?? 

Annotation?? #
(??# $
$str??$ 3
,??3 4
$str??5 >
)??> ?
,??? @
ClientId@@ 
=@@ 
table@@ $
.@@$ %
Column@@% +
<@@+ ,
string@@, 2
>@@2 3
(@@3 4
type@@4 8
:@@8 9
$str@@: H
,@@H I
nullable@@J R
:@@R S
false@@T Y
)@@Y Z
.AA 

AnnotationAA #
(AA# $
$strAA$ 3
,AA3 4
$strAA5 >
)AA> ?
,AA? @
BalanceBB 
=BB 
tableBB #
.BB# $
ColumnBB$ *
<BB* +
decimalBB+ 2
>BB2 3
(BB3 4
typeBB4 8
:BB8 9
$strBB: I
,BBI J
nullableBBK S
:BBS T
falseBBU Z
)BBZ [
,BB[ \
	UpdatedAtCC 
=CC 
tableCC  %
.CC% &
ColumnCC& ,
<CC, -
DateTimeCC- 5
>CC5 6
(CC6 7
typeCC7 ;
:CC; <
$strCC= J
,CCJ K
nullableCCL T
:CCT U
falseCCV [
)CC[ \
}DD 
,DD 
constraintsEE 
:EE 
tableEE "
=>EE# %
{FF 
tableGG 
.GG 

PrimaryKeyGG $
(GG$ %
$strGG% 2
,GG2 3
xGG4 5
=>GG6 8
xGG9 :
.GG: ;
IdGG; =
)GG= >
;GG> ?
tableHH 
.HH 

ForeignKeyHH $
(HH$ %
nameII 
:II 
$strII <
,II< =
columnJJ 
:JJ 
xJJ  !
=>JJ" $
xJJ% &
.JJ& '
ClientIdJJ' /
,JJ/ 0
principalTableKK &
:KK& '
$strKK( 1
,KK1 2
principalColumnLL '
:LL' (
$strLL) -
,LL- .
onDeleteMM  
:MM  !
ReferentialActionMM" 3
.MM3 4
CascadeMM4 ;
)MM; <
;MM< =
}NN 
)NN 
.OO 

AnnotationOO 
(OO 
$strOO +
,OO+ ,
$strOO- 6
)OO6 7
;OO7 8
migrationBuilderQQ 
.QQ 
CreateTableQQ (
(QQ( )
nameRR 
:RR 
$strRR *
,RR* +
columnsSS 
:SS 
tableSS 
=>SS !
newSS" %
{TT 
IdUU 
=UU 
tableUU 
.UU 
ColumnUU %
<UU% &
intUU& )
>UU) *
(UU* +
typeUU+ /
:UU/ 0
$strUU1 6
,UU6 7
nullableUU8 @
:UU@ A
falseUUB G
)UUG H
.VV 

AnnotationVV #
(VV# $
$strVV$ C
,VVC D(
MySqlValueGenerationStrategyVVE a
.VVa b
IdentityColumnVVb p
)VVp q
,VVq r
	AccountIdWW 
=WW 
tableWW  %
.WW% &
ColumnWW& ,
<WW, -
stringWW- 3
>WW3 4
(WW4 5
typeWW5 9
:WW9 :
$strWW; I
,WWI J
nullableWWK S
:WWS T
falseWWU Z
)WWZ [
.XX 

AnnotationXX #
(XX# $
$strXX$ 3
,XX3 4
$strXX5 >
)XX> ?
,XX? @
AssetIdYY 
=YY 
tableYY #
.YY# $
ColumnYY$ *
<YY* +
intYY+ .
>YY. /
(YY/ 0
typeYY0 4
:YY4 5
$strYY6 ;
,YY; <
nullableYY= E
:YYE F
falseYYG L
)YYL M
,YYM N
InvestmentTypeZZ "
=ZZ# $
tableZZ% *
.ZZ* +
ColumnZZ+ 1
<ZZ1 2
stringZZ2 8
>ZZ8 9
(ZZ9 :
typeZZ: >
:ZZ> ?
$strZZ@ J
,ZZJ K
nullableZZL T
:ZZT U
falseZZV [
)ZZ[ \
.[[ 

Annotation[[ #
([[# $
$str[[$ 3
,[[3 4
$str[[5 >
)[[> ?
,[[? @
Quantity\\ 
=\\ 
table\\ $
.\\$ %
Column\\% +
<\\+ ,
int\\, /
>\\/ 0
(\\0 1
type\\1 5
:\\5 6
$str\\7 <
,\\< =
nullable\\> F
:\\F G
false\\H M
)\\M N
,\\N O
Price]] 
=]] 
table]] !
.]]! "
Column]]" (
<]]( )
decimal]]) 0
>]]0 1
(]]1 2
type]]2 6
:]]6 7
$str]]8 G
,]]G H
nullable]]I Q
:]]Q R
false]]S X
)]]X Y
,]]Y Z
	CreatedAt^^ 
=^^ 
table^^  %
.^^% &
Column^^& ,
<^^, -
DateTime^^- 5
>^^5 6
(^^6 7
type^^7 ;
:^^; <
$str^^= J
,^^J K
nullable^^L T
:^^T U
false^^V [
)^^[ \
}__ 
,__ 
constraints`` 
:`` 
table`` "
=>``# %
{aa 
tablebb 
.bb 

PrimaryKeybb $
(bb$ %
$strbb% <
,bb< =
xbb> ?
=>bb@ B
xbbC D
.bbD E
IdbbE G
)bbG H
;bbH I
tablecc 
.cc 

ForeignKeycc $
(cc$ %
namedd 
:dd 
$strdd H
,ddH I
columnee 
:ee 
xee  !
=>ee" $
xee% &
.ee& '
	AccountIdee' 0
,ee0 1
principalTableff &
:ff& '
$strff( 2
,ff2 3
principalColumngg '
:gg' (
$strgg) -
,gg- .
onDeletehh  
:hh  !
ReferentialActionhh" 3
.hh3 4
Cascadehh4 ;
)hh; <
;hh< =
tableii 
.ii 

ForeignKeyii $
(ii$ %
namejj 
:jj 
$strjj D
,jjD E
columnkk 
:kk 
xkk  !
=>kk" $
xkk% &
.kk& '
AssetIdkk' .
,kk. /
principalTablell &
:ll& '
$strll( 0
,ll0 1
principalColumnmm '
:mm' (
$strmm) -
,mm- .
onDeletenn  
:nn  !
ReferentialActionnn" 3
.nn3 4
Cascadenn4 ;
)nn; <
;nn< =
}oo 
)oo 
.pp 

Annotationpp 
(pp 
$strpp +
,pp+ ,
$strpp- 6
)pp6 7
;pp7 8
migrationBuilderrr 
.rr 
CreateTablerr (
(rr( )
namess 
:ss 
$strss "
,ss" #
columnstt 
:tt 
tablett 
=>tt !
newtt" %
{uu 
Idvv 
=vv 
tablevv 
.vv 
Columnvv %
<vv% &
intvv& )
>vv) *
(vv* +
typevv+ /
:vv/ 0
$strvv1 6
,vv6 7
nullablevv8 @
:vv@ A
falsevvB G
)vvG H
.ww 

Annotationww #
(ww# $
$strww$ C
,wwC D(
MySqlValueGenerationStrategywwE a
.wwa b
IdentityColumnwwb p
)wwp q
,wwq r
AssetIdxx 
=xx 
tablexx #
.xx# $
Columnxx$ *
<xx* +
intxx+ .
>xx. /
(xx/ 0
typexx0 4
:xx4 5
$strxx6 ;
,xx; <
nullablexx= E
:xxE F
falsexxG L
)xxL M
,xxM N
	AccountIdyy 
=yy 
tableyy  %
.yy% &
Columnyy& ,
<yy, -
stringyy- 3
>yy3 4
(yy4 5
typeyy5 9
:yy9 :
$stryy; I
,yyI J
nullableyyK S
:yyS T
falseyyU Z
)yyZ [
.zz 

Annotationzz #
(zz# $
$strzz$ 3
,zz3 4
$strzz5 >
)zz> ?
,zz? @
Symbol{{ 
={{ 
table{{ "
.{{" #
Column{{# )
<{{) *
string{{* 0
>{{0 1
({{1 2
type{{2 6
:{{6 7
$str{{8 E
,{{E F
	maxLength{{G P
:{{P Q
$num{{R T
,{{T U
nullable{{V ^
:{{^ _
false{{` e
){{e f
.|| 

Annotation|| #
(||# $
$str||$ 3
,||3 4
$str||5 >
)||> ?
,||? @
Quantity}} 
=}} 
table}} $
.}}$ %
Column}}% +
<}}+ ,
int}}, /
>}}/ 0
(}}0 1
type}}1 5
:}}5 6
$str}}7 <
,}}< =
nullable}}> F
:}}F G
false}}H M
)}}M N
,}}N O 
AveragePurchasePrice~~ (
=~~) *
table~~+ 0
.~~0 1
Column~~1 7
<~~7 8
decimal~~8 ?
>~~? @
(~~@ A
type~~A E
:~~E F
$str~~G V
,~~V W
nullable~~X `
:~~` a
false~~b g
)~~g h
,~~h i
AcquisitionValue $
=% &
table' ,
., -
Column- 3
<3 4
decimal4 ;
>; <
(< =
type= A
:A B
$strC R
,R S
nullableT \
:\ ]
false^ c
)c d
,d e
CurrentValue
ÄÄ  
=
ÄÄ! "
table
ÄÄ# (
.
ÄÄ( )
Column
ÄÄ) /
<
ÄÄ/ 0
decimal
ÄÄ0 7
>
ÄÄ7 8
(
ÄÄ8 9
type
ÄÄ9 =
:
ÄÄ= >
$str
ÄÄ? N
,
ÄÄN O
nullable
ÄÄP X
:
ÄÄX Y
false
ÄÄZ _
)
ÄÄ_ `
,
ÄÄ` a%
ProfitabilityPercentage
ÅÅ +
=
ÅÅ, -
table
ÅÅ. 3
.
ÅÅ3 4
Column
ÅÅ4 :
<
ÅÅ: ;
decimal
ÅÅ; B
>
ÅÅB C
(
ÅÅC D
type
ÅÅD H
:
ÅÅH I
$str
ÅÅJ Y
,
ÅÅY Z
nullable
ÅÅ[ c
:
ÅÅc d
false
ÅÅe j
)
ÅÅj k
,
ÅÅk l 
ProfitabilityValue
ÇÇ &
=
ÇÇ' (
table
ÇÇ) .
.
ÇÇ. /
Column
ÇÇ/ 5
<
ÇÇ5 6
decimal
ÇÇ6 =
>
ÇÇ= >
(
ÇÇ> ?
type
ÇÇ? C
:
ÇÇC D
$str
ÇÇE T
,
ÇÇT U
nullable
ÇÇV ^
:
ÇÇ^ _
false
ÇÇ` e
)
ÇÇe f
,
ÇÇf g
	UpdatedAt
ÉÉ 
=
ÉÉ 
table
ÉÉ  %
.
ÉÉ% &
Column
ÉÉ& ,
<
ÉÉ, -
DateTime
ÉÉ- 5
>
ÉÉ5 6
(
ÉÉ6 7
type
ÉÉ7 ;
:
ÉÉ; <
$str
ÉÉ= J
,
ÉÉJ K
nullable
ÉÉL T
:
ÉÉT U
false
ÉÉV [
)
ÉÉ[ \
}
ÑÑ 
,
ÑÑ 
constraints
ÖÖ 
:
ÖÖ 
table
ÖÖ "
=>
ÖÖ# %
{
ÜÜ 
table
áá 
.
áá 

PrimaryKey
áá $
(
áá$ %
$str
áá% 4
,
áá4 5
x
áá6 7
=>
áá8 :
x
áá; <
.
áá< =
Id
áá= ?
)
áá? @
;
áá@ A
table
àà 
.
àà 

ForeignKey
àà $
(
àà$ %
name
ââ 
:
ââ 
$str
ââ @
,
ââ@ A
column
ää 
:
ää 
x
ää  !
=>
ää" $
x
ää% &
.
ää& '
	AccountId
ää' 0
,
ää0 1
principalTable
ãã &
:
ãã& '
$str
ãã( 2
,
ãã2 3
principalColumn
åå '
:
åå' (
$str
åå) -
,
åå- .
onDelete
çç  
:
çç  !
ReferentialAction
çç" 3
.
çç3 4
Cascade
çç4 ;
)
çç; <
;
çç< =
table
éé 
.
éé 

ForeignKey
éé $
(
éé$ %
name
èè 
:
èè 
$str
èè <
,
èè< =
column
êê 
:
êê 
x
êê  !
=>
êê" $
x
êê% &
.
êê& '
AssetId
êê' .
,
êê. /
principalTable
ëë &
:
ëë& '
$str
ëë( 0
,
ëë0 1
principalColumn
íí '
:
íí' (
$str
íí) -
,
íí- .
onDelete
ìì  
:
ìì  !
ReferentialAction
ìì" 3
.
ìì3 4
Cascade
ìì4 ;
)
ìì; <
;
ìì< =
}
îî 
)
îî 
.
ïï 

Annotation
ïï 
(
ïï 
$str
ïï +
,
ïï+ ,
$str
ïï- 6
)
ïï6 7
;
ïï7 8
migrationBuilder
óó 
.
óó 
CreateTable
óó (
(
óó( )
name
òò 
:
òò 
$str
òò *
,
òò* +
columns
ôô 
:
ôô 
table
ôô 
=>
ôô !
new
ôô" %
{
öö 
Id
õõ 
=
õõ 
table
õõ 
.
õõ 
Column
õõ %
<
õõ% &
int
õõ& )
>
õõ) *
(
õõ* +
type
õõ+ /
:
õõ/ 0
$str
õõ1 6
,
õõ6 7
nullable
õõ8 @
:
õõ@ A
false
õõB G
)
õõG H
.
úú 

Annotation
úú #
(
úú# $
$str
úú$ C
,
úúC D*
MySqlValueGenerationStrategy
úúE a
.
úúa b
IdentityColumn
úúb p
)
úúp q
,
úúq r
	AccountId
ùù 
=
ùù 
table
ùù  %
.
ùù% &
Column
ùù& ,
<
ùù, -
string
ùù- 3
>
ùù3 4
(
ùù4 5
type
ùù5 9
:
ùù9 :
$str
ùù; I
,
ùùI J
nullable
ùùK S
:
ùùS T
false
ùùU Z
)
ùùZ [
.
ûû 

Annotation
ûû #
(
ûû# $
$str
ûû$ 3
,
ûû3 4
$str
ûû5 >
)
ûû> ?
,
ûû? @
Value
üü 
=
üü 
table
üü !
.
üü! "
Column
üü" (
<
üü( )
decimal
üü) 0
>
üü0 1
(
üü1 2
type
üü2 6
:
üü6 7
$str
üü8 G
,
üüG H
nullable
üüI Q
:
üüQ R
false
üüS X
)
üüX Y
,
üüY Z
TransactionType
†† #
=
††$ %
table
††& +
.
††+ ,
Column
††, 2
<
††2 3
string
††3 9
>
††9 :
(
††: ;
type
††; ?
:
††? @
$str
††A K
,
††K L
nullable
††M U
:
††U V
false
††W \
)
††\ ]
.
°° 

Annotation
°° #
(
°°# $
$str
°°$ 3
,
°°3 4
$str
°°5 >
)
°°> ?
}
¢¢ 
,
¢¢ 
constraints
££ 
:
££ 
table
££ "
=>
££# %
{
§§ 
table
•• 
.
•• 

PrimaryKey
•• $
(
••$ %
$str
••% <
,
••< =
x
••> ?
=>
••@ B
x
••C D
.
••D E
Id
••E G
)
••G H
;
••H I
table
¶¶ 
.
¶¶ 

ForeignKey
¶¶ $
(
¶¶$ %
name
ßß 
:
ßß 
$str
ßß H
,
ßßH I
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
	AccountId
®®' 0
,
®®0 1
principalTable
©© &
:
©©& '
$str
©©( 2
,
©©2 3
principalColumn
™™ '
:
™™' (
$str
™™) -
,
™™- .
onDelete
´´  
:
´´  !
ReferentialAction
´´" 3
.
´´3 4
Cascade
´´4 ;
)
´´; <
;
´´< =
}
¨¨ 
)
¨¨ 
.
≠≠ 

Annotation
≠≠ 
(
≠≠ 
$str
≠≠ +
,
≠≠+ ,
$str
≠≠- 6
)
≠≠6 7
;
≠≠7 8
migrationBuilder
ØØ 
.
ØØ 

InsertData
ØØ '
(
ØØ' (
table
∞∞ 
:
∞∞ 
$str
∞∞ 
,
∞∞  
columns
±± 
:
±± 
new
±± 
[
±± 
]
±± 
{
±±  
$str
±±! %
,
±±% &
$str
±±' :
,
±±: ;
$str
±±< B
,
±±B C
$str
±±D K
,
±±K L
$str
±±M U
}
±±V W
,
±±W X
values
≤≤ 
:
≤≤ 
new
≤≤ 
object
≤≤ "
[
≤≤" #
,
≤≤# $
]
≤≤$ %
{
≥≥ 
{
¥¥ 
$num
¥¥ 
,
¥¥ 
$num
¥¥ "
,
¥¥" #
$str
¥¥$ 0
,
¥¥0 1
$num
¥¥2 8
,
¥¥8 9
$str
¥¥: A
}
¥¥B C
,
¥¥C D
{
µµ 
$num
µµ 
,
µµ 
$num
µµ "
,
µµ" #
$str
µµ$ /
,
µµ/ 0
$num
µµ1 7
,
µµ7 8
$str
µµ9 @
}
µµA B
,
µµB C
{
∂∂ 
$num
∂∂ 
,
∂∂ 
$num
∂∂ "
,
∂∂" #
$str
∂∂$ 0
,
∂∂0 1
$num
∂∂2 8
,
∂∂8 9
$str
∂∂: A
}
∂∂B C
,
∂∂C D
{
∑∑ 
$num
∑∑ 
,
∑∑ 
$num
∑∑ "
,
∑∑" #
$str
∑∑$ +
,
∑∑+ ,
$num
∑∑- 3
,
∑∑3 4
$str
∑∑5 <
}
∑∑= >
,
∑∑> ?
{
∏∏ 
$num
∏∏ 
,
∏∏ 
$num
∏∏ "
,
∏∏" #
$str
∏∏$ *
,
∏∏* +
$num
∏∏, 2
,
∏∏2 3
$str
∏∏4 ;
}
∏∏< =
,
∏∏= >
{
ππ 
$num
ππ 
,
ππ 
$num
ππ "
,
ππ" #
$str
ππ$ (
,
ππ( )
$num
ππ* 0
,
ππ0 1
$str
ππ2 9
}
ππ: ;
,
ππ; <
{
∫∫ 
$num
∫∫ 
,
∫∫ 
$num
∫∫ "
,
∫∫" #
$str
∫∫$ /
,
∫∫/ 0
$num
∫∫1 6
,
∫∫6 7
$str
∫∫8 ?
}
∫∫@ A
,
∫∫A B
{
ªª 
$num
ªª 
,
ªª 
$num
ªª "
,
ªª" #
$str
ªª$ 2
,
ªª2 3
$num
ªª4 :
,
ªª: ;
$str
ªª< C
}
ªªD E
,
ªªE F
{
ºº 
$num
ºº 
,
ºº 
$num
ºº #
,
ºº# $
$str
ºº% 3
,
ºº3 4
$num
ºº5 :
,
ºº: ;
$str
ºº< C
}
ººD E
,
ººE F
{
ΩΩ 
$num
ΩΩ 
,
ΩΩ 
$num
ΩΩ $
,
ΩΩ$ %
$str
ΩΩ& 0
,
ΩΩ0 1
$num
ΩΩ2 8
,
ΩΩ8 9
$str
ΩΩ: A
}
ΩΩB C
,
ΩΩC D
{
ææ 
$num
ææ 
,
ææ 
$num
ææ #
,
ææ# $
$str
ææ% /
,
ææ/ 0
$num
ææ1 7
,
ææ7 8
$str
ææ9 @
}
ææA B
,
ææB C
{
øø 
$num
øø 
,
øø 
$num
øø #
,
øø# $
$str
øø% 0
,
øø0 1
$num
øø2 8
,
øø8 9
$str
øø: A
}
øøB C
,
øøC D
{
¿¿ 
$num
¿¿ 
,
¿¿ 
$num
¿¿ $
,
¿¿$ %
$str
¿¿& .
,
¿¿. /
$num
¿¿0 6
,
¿¿6 7
$str
¿¿8 ?
}
¿¿@ A
,
¿¿A B
{
¡¡ 
$num
¡¡ 
,
¡¡ 
$num
¡¡ #
,
¡¡# $
$str
¡¡% .
,
¡¡. /
$num
¡¡0 6
,
¡¡6 7
$str
¡¡8 ?
}
¡¡@ A
,
¡¡A B
{
¬¬ 
$num
¬¬ 
,
¬¬ 
$num
¬¬ $
,
¬¬$ %
$str
¬¬& .
,
¬¬. /
$num
¬¬0 6
,
¬¬6 7
$str
¬¬8 ?
}
¬¬@ A
,
¬¬A B
{
√√ 
$num
√√ 
,
√√ 
$num
√√ $
,
√√$ %
$str
√√& 2
,
√√2 3
$num
√√4 :
,
√√: ;
$str
√√< D
}
√√E F
,
√√F G
{
ƒƒ 
$num
ƒƒ 
,
ƒƒ 
$num
ƒƒ #
,
ƒƒ# $
$str
ƒƒ% 3
,
ƒƒ3 4
$num
ƒƒ5 ;
,
ƒƒ; <
$str
ƒƒ= D
}
ƒƒE F
,
ƒƒF G
{
≈≈ 
$num
≈≈ 
,
≈≈ 
$num
≈≈ $
,
≈≈$ %
$str
≈≈& .
,
≈≈. /
$num
≈≈0 6
,
≈≈6 7
$str
≈≈8 ?
}
≈≈@ A
,
≈≈A B
{
∆∆ 
$num
∆∆ 
,
∆∆ 
$num
∆∆ $
,
∆∆$ %
$str
∆∆& -
,
∆∆- .
$num
∆∆/ 5
,
∆∆5 6
$str
∆∆7 >
}
∆∆? @
,
∆∆@ A
{
«« 
$num
«« 
,
«« 
$num
«« $
,
««$ %
$str
««& -
,
««- .
$num
««/ 4
,
««4 5
$str
««6 =
}
««> ?
,
««? @
{
»» 
$num
»» 
,
»» 
$num
»» $
,
»»$ %
$str
»»& 0
,
»»0 1
$num
»»2 7
,
»»7 8
$str
»»9 @
}
»»A B
,
»»B C
{
…… 
$num
…… 
,
…… 
$num
…… $
,
……$ %
$str
……& -
,
……- .
$num
……/ 3
,
……3 4
$str
……5 <
}
……= >
,
……> ?
{
   
$num
   
,
   
$num
   $
,
  $ %
$str
  & -
,
  - .
$num
  / 5
,
  5 6
$str
  7 >
}
  ? @
,
  @ A
{
ÀÀ 
$num
ÀÀ 
,
ÀÀ 
$num
ÀÀ #
,
ÀÀ# $
$str
ÀÀ% 3
,
ÀÀ3 4
$num
ÀÀ5 ;
,
ÀÀ; <
$str
ÀÀ= D
}
ÀÀE F
,
ÀÀF G
{
ÃÃ 
$num
ÃÃ 
,
ÃÃ 
$num
ÃÃ $
,
ÃÃ$ %
$str
ÃÃ& 4
,
ÃÃ4 5
$num
ÃÃ6 :
,
ÃÃ: ;
$str
ÃÃ< C
}
ÃÃD E
,
ÃÃE F
{
ÕÕ 
$num
ÕÕ 
,
ÕÕ 
$num
ÕÕ #
,
ÕÕ# $
$str
ÕÕ% 1
,
ÕÕ1 2
$num
ÕÕ3 8
,
ÕÕ8 9
$str
ÕÕ: A
}
ÕÕB C
,
ÕÕC D
{
ŒŒ 
$num
ŒŒ 
,
ŒŒ 
$num
ŒŒ #
,
ŒŒ# $
$str
ŒŒ% 3
,
ŒŒ3 4
$num
ŒŒ5 ;
,
ŒŒ; <
$str
ŒŒ= D
}
ŒŒE F
,
ŒŒF G
{
œœ 
$num
œœ 
,
œœ 
$num
œœ #
,
œœ# $
$str
œœ% ,
,
œœ, -
$num
œœ. 3
,
œœ3 4
$str
œœ5 <
}
œœ= >
,
œœ> ?
{
–– 
$num
–– 
,
–– 
$num
–– #
,
––# $
$str
––% 2
,
––2 3
$num
––4 8
,
––8 9
$str
––: A
}
––B C
,
––C D
{
—— 
$num
—— 
,
—— 
$num
—— #
,
——# $
$str
——% 1
,
——1 2
$num
——3 9
,
——9 :
$str
——; B
}
——C D
,
——D E
{
““ 
$num
““ 
,
““ 
$num
““ #
,
““# $
$str
““% 1
,
““1 2
$num
““3 9
,
““9 :
$str
““; B
}
““C D
,
““D E
{
”” 
$num
”” 
,
”” 
$num
”” #
,
””# $
$str
””% .
,
””. /
$num
””0 6
,
””6 7
$str
””8 ?
}
””@ A
,
””A B
{
‘‘ 
$num
‘‘ 
,
‘‘ 
$num
‘‘ #
,
‘‘# $
$str
‘‘% 2
,
‘‘2 3
$num
‘‘4 :
,
‘‘: ;
$str
‘‘< C
}
‘‘D E
,
‘‘E F
{
’’ 
$num
’’ 
,
’’ 
$num
’’ #
,
’’# $
$str
’’% /
,
’’/ 0
$num
’’1 7
,
’’7 8
$str
’’9 A
}
’’B C
,
’’C D
{
÷÷ 
$num
÷÷ 
,
÷÷ 
$num
÷÷ $
,
÷÷$ %
$str
÷÷& -
,
÷÷- .
$num
÷÷/ 5
,
÷÷5 6
$str
÷÷7 >
}
÷÷? @
,
÷÷@ A
{
◊◊ 
$num
◊◊ 
,
◊◊ 
$num
◊◊ #
,
◊◊# $
$str
◊◊% 3
,
◊◊3 4
$num
◊◊5 ;
,
◊◊; <
$str
◊◊= D
}
◊◊E F
,
◊◊F G
{
ÿÿ 
$num
ÿÿ 
,
ÿÿ 
$num
ÿÿ $
,
ÿÿ$ %
$str
ÿÿ& 2
,
ÿÿ2 3
$num
ÿÿ4 :
,
ÿÿ: ;
$str
ÿÿ< C
}
ÿÿD E
,
ÿÿE F
{
ŸŸ 
$num
ŸŸ 
,
ŸŸ 
$num
ŸŸ #
,
ŸŸ# $
$str
ŸŸ% ,
,
ŸŸ, -
$num
ŸŸ. 4
,
ŸŸ4 5
$str
ŸŸ6 =
}
ŸŸ> ?
,
ŸŸ? @
{
⁄⁄ 
$num
⁄⁄ 
,
⁄⁄ 
$num
⁄⁄ #
,
⁄⁄# $
$str
⁄⁄% -
,
⁄⁄- .
$num
⁄⁄/ 5
,
⁄⁄5 6
$str
⁄⁄7 >
}
⁄⁄? @
,
⁄⁄@ A
{
€€ 
$num
€€ 
,
€€ 
$num
€€ $
,
€€$ %
$str
€€& .
,
€€. /
$num
€€0 6
,
€€6 7
$str
€€8 ?
}
€€@ A
,
€€A B
{
‹‹ 
$num
‹‹ 
,
‹‹ 
$num
‹‹ #
,
‹‹# $
$str
‹‹% 1
,
‹‹1 2
$num
‹‹3 8
,
‹‹8 9
$str
‹‹: A
}
‹‹B C
,
‹‹C D
{
›› 
$num
›› 
,
›› 
$num
›› #
,
››# $
$str
››% *
,
››* +
$num
››, 1
,
››1 2
$str
››3 :
}
››; <
,
››< =
{
ﬁﬁ 
$num
ﬁﬁ 
,
ﬁﬁ 
$num
ﬁﬁ #
,
ﬁﬁ# $
$str
ﬁﬁ% 3
,
ﬁﬁ3 4
$num
ﬁﬁ5 ;
,
ﬁﬁ; <
$str
ﬁﬁ= D
}
ﬁﬁE F
,
ﬁﬁF G
{
ﬂﬂ 
$num
ﬂﬂ 
,
ﬂﬂ 
$num
ﬂﬂ #
,
ﬂﬂ# $
$str
ﬂﬂ% 1
,
ﬂﬂ1 2
$num
ﬂﬂ3 8
,
ﬂﬂ8 9
$str
ﬂﬂ: A
}
ﬂﬂB C
,
ﬂﬂC D
{
‡‡ 
$num
‡‡ 
,
‡‡ 
$num
‡‡ #
,
‡‡# $
$str
‡‡% .
,
‡‡. /
$num
‡‡0 5
,
‡‡5 6
$str
‡‡7 >
}
‡‡? @
,
‡‡@ A
{
·· 
$num
·· 
,
·· 
$num
·· #
,
··# $
$str
··% -
,
··- .
$num
··/ 5
,
··5 6
$str
··7 >
}
··? @
,
··@ A
{
‚‚ 
$num
‚‚ 
,
‚‚ 
$num
‚‚ #
,
‚‚# $
$str
‚‚% 2
,
‚‚2 3
$num
‚‚4 :
,
‚‚: ;
$str
‚‚< D
}
‚‚E F
,
‚‚F G
{
„„ 
$num
„„ 
,
„„ 
$num
„„ $
,
„„$ %
$str
„„& 4
,
„„4 5
$num
„„6 8
,
„„8 9
$str
„„: A
}
„„B C
,
„„C D
{
‰‰ 
$num
‰‰ 
,
‰‰ 
$num
‰‰ #
,
‰‰# $
$str
‰‰% -
,
‰‰- .
$num
‰‰/ 4
,
‰‰4 5
$str
‰‰6 =
}
‰‰> ?
,
‰‰? @
{
ÂÂ 
$num
ÂÂ 
,
ÂÂ 
$num
ÂÂ #
,
ÂÂ# $
$str
ÂÂ% 3
,
ÂÂ3 4
$num
ÂÂ5 ;
,
ÂÂ; <
$str
ÂÂ= D
}
ÂÂE F
,
ÂÂF G
{
ÊÊ 
$num
ÊÊ 
,
ÊÊ 
$num
ÊÊ $
,
ÊÊ$ %
$str
ÊÊ& +
,
ÊÊ+ ,
$num
ÊÊ- 3
,
ÊÊ3 4
$str
ÊÊ5 <
}
ÊÊ= >
,
ÊÊ> ?
{
ÁÁ 
$num
ÁÁ 
,
ÁÁ 
$num
ÁÁ #
,
ÁÁ# $
$str
ÁÁ% 0
,
ÁÁ0 1
$num
ÁÁ2 6
,
ÁÁ6 7
$str
ÁÁ8 ?
}
ÁÁ@ A
,
ÁÁA B
{
ËË 
$num
ËË 
,
ËË 
$num
ËË #
,
ËË# $
$str
ËË% 1
,
ËË1 2
$num
ËË3 8
,
ËË8 9
$str
ËË: B
}
ËËC D
,
ËËD E
{
ÈÈ 
$num
ÈÈ 
,
ÈÈ 
$num
ÈÈ #
,
ÈÈ# $
$str
ÈÈ% /
,
ÈÈ/ 0
$num
ÈÈ1 7
,
ÈÈ7 8
$str
ÈÈ9 @
}
ÈÈA B
,
ÈÈB C
{
ÍÍ 
$num
ÍÍ 
,
ÍÍ 
$num
ÍÍ #
,
ÍÍ# $
$str
ÍÍ% .
,
ÍÍ. /
$num
ÍÍ0 5
,
ÍÍ5 6
$str
ÍÍ7 >
}
ÍÍ? @
,
ÍÍ@ A
{
ÎÎ 
$num
ÎÎ 
,
ÎÎ 
$num
ÎÎ #
,
ÎÎ# $
$str
ÎÎ% 3
,
ÎÎ3 4
$num
ÎÎ5 ;
,
ÎÎ; <
$str
ÎÎ= D
}
ÎÎE F
,
ÎÎF G
{
ÏÏ 
$num
ÏÏ 
,
ÏÏ 
$num
ÏÏ #
,
ÏÏ# $
$str
ÏÏ% 2
,
ÏÏ2 3
$num
ÏÏ4 9
,
ÏÏ9 :
$str
ÏÏ; B
}
ÏÏC D
,
ÏÏD E
{
ÌÌ 
$num
ÌÌ 
,
ÌÌ 
$num
ÌÌ #
,
ÌÌ# $
$str
ÌÌ% .
,
ÌÌ. /
$num
ÌÌ0 6
,
ÌÌ6 7
$str
ÌÌ8 ?
}
ÌÌ@ A
,
ÌÌA B
{
ÓÓ 
$num
ÓÓ 
,
ÓÓ 
$num
ÓÓ #
,
ÓÓ# $
$str
ÓÓ% -
,
ÓÓ- .
$num
ÓÓ/ 4
,
ÓÓ4 5
$str
ÓÓ6 =
}
ÓÓ> ?
,
ÓÓ? @
{
ÔÔ 
$num
ÔÔ 
,
ÔÔ 
$num
ÔÔ #
,
ÔÔ# $
$str
ÔÔ% .
,
ÔÔ. /
$num
ÔÔ0 6
,
ÔÔ6 7
$str
ÔÔ8 ?
}
ÔÔ@ A
,
ÔÔA B
{
 
$num
 
,
 
$num
 #
,
# $
$str
% *
,
* +
$num
, 1
,
1 2
$str
3 :
}
; <
,
< =
{
ÒÒ 
$num
ÒÒ 
,
ÒÒ 
$num
ÒÒ #
,
ÒÒ# $
$str
ÒÒ% 0
,
ÒÒ0 1
$num
ÒÒ2 8
,
ÒÒ8 9
$str
ÒÒ: A
}
ÒÒB C
,
ÒÒC D
{
ÚÚ 
$num
ÚÚ 
,
ÚÚ 
$num
ÚÚ #
,
ÚÚ# $
$str
ÚÚ% 2
,
ÚÚ2 3
$num
ÚÚ4 9
,
ÚÚ9 :
$str
ÚÚ; B
}
ÚÚC D
,
ÚÚD E
{
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
$num
ÛÛ #
,
ÛÛ# $
$str
ÛÛ% 0
,
ÛÛ0 1
$num
ÛÛ2 8
,
ÛÛ8 9
$str
ÛÛ: A
}
ÛÛB C
,
ÛÛC D
{
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
$num
ÙÙ #
,
ÙÙ# $
$str
ÙÙ% 0
,
ÙÙ0 1
$num
ÙÙ2 8
,
ÙÙ8 9
$str
ÙÙ: A
}
ÙÙB C
,
ÙÙC D
{
ıı 
$num
ıı 
,
ıı 
$num
ıı #
,
ıı# $
$str
ıı% /
,
ıı/ 0
$num
ıı1 7
,
ıı7 8
$str
ıı9 @
}
ııA B
,
ııB C
{
ˆˆ 
$num
ˆˆ 
,
ˆˆ 
$num
ˆˆ #
,
ˆˆ# $
$str
ˆˆ% +
,
ˆˆ+ ,
$num
ˆˆ- 2
,
ˆˆ2 3
$str
ˆˆ4 ;
}
ˆˆ< =
,
ˆˆ= >
{
˜˜ 
$num
˜˜ 
,
˜˜ 
$num
˜˜ "
,
˜˜" #
$str
˜˜$ 2
,
˜˜2 3
$num
˜˜4 9
,
˜˜9 :
$str
˜˜; B
}
˜˜C D
,
˜˜D E
{
¯¯ 
$num
¯¯ 
,
¯¯ 
$num
¯¯ #
,
¯¯# $
$str
¯¯% 0
,
¯¯0 1
$num
¯¯2 8
,
¯¯8 9
$str
¯¯: A
}
¯¯B C
,
¯¯C D
{
˘˘ 
$num
˘˘ 
,
˘˘ 
$num
˘˘ $
,
˘˘$ %
$str
˘˘& 4
,
˘˘4 5
$num
˘˘6 <
,
˘˘< =
$str
˘˘> E
}
˘˘F G
,
˘˘G H
{
˙˙ 
$num
˙˙ 
,
˙˙ 
$num
˙˙ #
,
˙˙# $
$str
˙˙% 0
,
˙˙0 1
$num
˙˙2 8
,
˙˙8 9
$str
˙˙: A
}
˙˙B C
,
˙˙C D
{
˚˚ 
$num
˚˚ 
,
˚˚ 
$num
˚˚ $
,
˚˚$ %
$str
˚˚& /
,
˚˚/ 0
$num
˚˚1 7
,
˚˚7 8
$str
˚˚9 @
}
˚˚A B
,
˚˚B C
{
¸¸ 
$num
¸¸ 
,
¸¸ 
$num
¸¸ #
,
¸¸# $
$str
¸¸% -
,
¸¸- .
$num
¸¸/ 5
,
¸¸5 6
$str
¸¸7 >
}
¸¸? @
,
¸¸@ A
{
˝˝ 
$num
˝˝ 
,
˝˝ 
$num
˝˝ #
,
˝˝# $
$str
˝˝% 3
,
˝˝3 4
$num
˝˝5 ;
,
˝˝; <
$str
˝˝= E
}
˝˝F G
,
˝˝G H
{
˛˛ 
$num
˛˛ 
,
˛˛ 
$num
˛˛ #
,
˛˛# $
$str
˛˛% 3
,
˛˛3 4
$num
˛˛5 ;
,
˛˛; <
$str
˛˛= D
}
˛˛E F
,
˛˛F G
{
ˇˇ 
$num
ˇˇ 
,
ˇˇ 
$num
ˇˇ "
,
ˇˇ" #
$str
ˇˇ$ 2
,
ˇˇ2 3
$num
ˇˇ4 :
,
ˇˇ: ;
$str
ˇˇ< C
}
ˇˇD E
,
ˇˇE F
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
$num
ÄÄ #
,
ÄÄ# $
$str
ÄÄ% 2
,
ÄÄ2 3
$num
ÄÄ4 9
,
ÄÄ9 :
$str
ÄÄ; C
}
ÄÄD E
,
ÄÄE F
{
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
$num
ÅÅ #
,
ÅÅ# $
$str
ÅÅ% 0
,
ÅÅ0 1
$num
ÅÅ2 8
,
ÅÅ8 9
$str
ÅÅ: A
}
ÅÅB C
,
ÅÅC D
{
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
$num
ÇÇ #
,
ÇÇ# $
$str
ÇÇ% ,
,
ÇÇ, -
$num
ÇÇ. 4
,
ÇÇ4 5
$str
ÇÇ6 >
}
ÇÇ? @
,
ÇÇ@ A
{
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
$num
ÉÉ #
,
ÉÉ# $
$str
ÉÉ% 3
,
ÉÉ3 4
$num
ÉÉ5 ;
,
ÉÉ; <
$str
ÉÉ= D
}
ÉÉE F
,
ÉÉF G
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$num
ÑÑ #
,
ÑÑ# $
$str
ÑÑ% *
,
ÑÑ* +
$num
ÑÑ, 1
,
ÑÑ1 2
$str
ÑÑ3 :
}
ÑÑ; <
,
ÑÑ< =
{
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
$num
ÖÖ #
,
ÖÖ# $
$str
ÖÖ% ,
,
ÖÖ, -
$num
ÖÖ. 4
,
ÖÖ4 5
$str
ÖÖ6 =
}
ÖÖ> ?
,
ÖÖ? @
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
$num
ÜÜ $
,
ÜÜ$ %
$str
ÜÜ& 0
,
ÜÜ0 1
$num
ÜÜ2 8
,
ÜÜ8 9
$str
ÜÜ: A
}
ÜÜB C
,
ÜÜC D
{
áá 
$num
áá 
,
áá 
$num
áá #
,
áá# $
$str
áá% /
,
áá/ 0
$num
áá1 6
,
áá6 7
$str
áá8 ?
}
áá@ A
,
ááA B
{
àà 
$num
àà 
,
àà 
$num
àà #
,
àà# $
$str
àà% +
,
àà+ ,
$num
àà- 3
,
àà3 4
$str
àà5 <
}
àà= >
,
àà> ?
{
ââ 
$num
ââ 
,
ââ 
$num
ââ $
,
ââ$ %
$str
ââ& +
,
ââ+ ,
$num
ââ- 2
,
ââ2 3
$str
ââ4 ;
}
ââ< =
,
ââ= >
{
ää 
$num
ää 
,
ää 
$num
ää $
,
ää$ %
$str
ää& -
,
ää- .
$num
ää/ 5
,
ää5 6
$str
ää7 >
}
ää? @
,
ää@ A
{
ãã 
$num
ãã 
,
ãã 
$num
ãã $
,
ãã$ %
$str
ãã& +
,
ãã+ ,
$num
ãã- 3
,
ãã3 4
$str
ãã5 <
}
ãã= >
,
ãã> ?
{
åå 
$num
åå 
,
åå 
$num
åå #
,
åå# $
$str
åå% 1
,
åå1 2
$num
åå3 8
,
åå8 9
$str
åå: A
}
ååB C
,
ååC D
{
çç 
$num
çç 
,
çç 
$num
çç #
,
çç# $
$str
çç% 3
,
çç3 4
$num
çç5 ;
,
çç; <
$str
çç= D
}
ççE F
}
éé 
)
éé 
;
éé 
migrationBuilder
êê 
.
êê 
CreateIndex
êê (
(
êê( )
name
ëë 
:
ëë 
$str
ëë ,
,
ëë, -
table
íí 
:
íí 
$str
íí !
,
íí! "
column
ìì 
:
ìì 
$str
ìì "
,
ìì" #
unique
îî 
:
îî 
true
îî 
)
îî 
;
îî 
migrationBuilder
ññ 
.
ññ 
CreateIndex
ññ (
(
ññ( )
name
óó 
:
óó 
$str
óó (
,
óó( )
table
òò 
:
òò 
$str
òò  
,
òò  !
column
ôô 
:
ôô 
$str
ôô 
,
ôô  
unique
öö 
:
öö 
true
öö 
)
öö 
;
öö 
migrationBuilder
úú 
.
úú 
CreateIndex
úú (
(
úú( )
name
ùù 
:
ùù 
$str
ùù 7
,
ùù7 8
table
ûû 
:
ûû 
$str
ûû +
,
ûû+ ,
column
üü 
:
üü 
$str
üü #
)
üü# $
;
üü$ %
migrationBuilder
°° 
.
°° 
CreateIndex
°° (
(
°°( )
name
¢¢ 
:
¢¢ 
$str
¢¢ 5
,
¢¢5 6
table
££ 
:
££ 
$str
££ +
,
££+ ,
column
§§ 
:
§§ 
$str
§§ !
)
§§! "
;
§§" #
migrationBuilder
¶¶ 
.
¶¶ 
CreateIndex
¶¶ (
(
¶¶( )
name
ßß 
:
ßß 
$str
ßß /
,
ßß/ 0
table
®® 
:
®® 
$str
®® #
,
®®# $
column
©© 
:
©© 
$str
©© #
)
©©# $
;
©©$ %
migrationBuilder
´´ 
.
´´ 
CreateIndex
´´ (
(
´´( )
name
¨¨ 
:
¨¨ 
$str
¨¨ -
,
¨¨- .
table
≠≠ 
:
≠≠ 
$str
≠≠ #
,
≠≠# $
column
ÆÆ 
:
ÆÆ 
$str
ÆÆ !
)
ÆÆ! "
;
ÆÆ" #
migrationBuilder
∞∞ 
.
∞∞ 
CreateIndex
∞∞ (
(
∞∞( )
name
±± 
:
±± 
$str
±± 7
,
±±7 8
table
≤≤ 
:
≤≤ 
$str
≤≤ +
,
≤≤+ ,
column
≥≥ 
:
≥≥ 
$str
≥≥ #
)
≥≥# $
;
≥≥$ %
}
¥¥ 	
	protected
∑∑ 
override
∑∑ 
void
∑∑ 
Down
∑∑  $
(
∑∑$ %
MigrationBuilder
∑∑% 5
migrationBuilder
∑∑6 F
)
∑∑F G
{
∏∏ 	
migrationBuilder
ππ 
.
ππ 
	DropTable
ππ &
(
ππ& '
name
∫∫ 
:
∫∫ 
$str
∫∫ *
)
∫∫* +
;
∫∫+ ,
migrationBuilder
ºº 
.
ºº 
	DropTable
ºº &
(
ºº& '
name
ΩΩ 
:
ΩΩ 
$str
ΩΩ "
)
ΩΩ" #
;
ΩΩ# $
migrationBuilder
øø 
.
øø 
	DropTable
øø &
(
øø& '
name
¿¿ 
:
¿¿ 
$str
¿¿ *
)
¿¿* +
;
¿¿+ ,
migrationBuilder
¬¬ 
.
¬¬ 
	DropTable
¬¬ &
(
¬¬& '
name
√√ 
:
√√ 
$str
√√ 
)
√√ 
;
√√  
migrationBuilder
≈≈ 
.
≈≈ 
	DropTable
≈≈ &
(
≈≈& '
name
∆∆ 
:
∆∆ 
$str
∆∆  
)
∆∆  !
;
∆∆! "
migrationBuilder
»» 
.
»» 
	DropTable
»» &
(
»»& '
name
…… 
:
…… 
$str
…… 
)
……  
;
……  !
}
   	
}
ÀÀ 
}ÃÃ ∏
QC:\git\TaskManagementSystem\src\Infra\Database\Repositories\CategoryRepository.cs
	namespace 	
Infra
 
. 
Database 
. 
Repositories %
{ 
[		 #
ExcludeFromCodeCoverage		 
]		 
public

 

class

 
CategoryRepository

 #
:

$ %
ICategoryRepository

& 9
{ 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public 
CategoryRepository !
(! " 
ApplicationDbContext" 6
context7 >
)> ?
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Category& .
>. /
>/ 0!
GetAllCategoriesAsync1 F
(F G
)G H
{ 	
return 
await 
_context !
.! "

Categories" ,
., -
ToListAsync- 8
(8 9
)9 :
;: ;
} 	
public 
async 
Task 
< 
Category "
>" # 
GetCategoryByIdAsync$ 8
(8 9
int9 <
id= ?
)? @
{ 	
return 
await 
_context !
.! "

Categories" ,
., -
	FindAsync- 6
(6 7
id7 9
)9 :
;: ;
} 	
public 
async 
Task 
AddCategoryAsync *
(* +
Category+ 3
category4 <
)< =
{ 	
await 
_context 
. 

Categories %
.% &
AddAsync& .
(. /
category/ 7
)7 8
;8 9
await   
_context   
.   
SaveChangesAsync   +
(  + ,
)  , -
;  - .
}!! 	
public## 
async## 
Task## 
UpdateCategoryAsync## -
(##- .
Category##. 6
category##7 ?
)##? @
{$$ 	
_context%% 
.%% 

Categories%% 
.%%  
Update%%  &
(%%& '
category%%' /
)%%/ 0
;%%0 1
await&& 
_context&& 
.&& 
SaveChangesAsync&& +
(&&+ ,
)&&, -
;&&- .
}'' 	
public)) 
async)) 
Task)) 
DeleteCategoryAsync)) -
())- .
int)). 1
id))2 4
)))4 5
{** 	
var++ 
category++ 
=++ 
await++  
_context++! )
.++) *

Categories++* 4
.++4 5
	FindAsync++5 >
(++> ?
id++? A
)++A B
;++B C
if,, 
(,, 
category,, 
!=,, 
null,,  
),,  !
{-- 
_context.. 
... 

Categories.. #
...# $
Remove..$ *
(..* +
category..+ 3
)..3 4
;..4 5
await// 
_context// 
.// 
SaveChangesAsync// /
(/// 0
)//0 1
;//1 2
}00 
}11 	
}22 
}33 Õ
MC:\git\TaskManagementSystem\src\Infra\Database\Repositories\TaskRepository.cs
	namespace 	
Infra
 
. 
Database 
. 
Repositories %
{ 
[		 #
ExcludeFromCodeCoverage		 
]		 
public

 

class

 
TaskRepository

 
:

  !
ITaskRepository

" 1
{ 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public 
TaskRepository 
(  
ApplicationDbContext 2
context3 :
): ;
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Tasks& +
>+ ,
>, -!
GetTasksByUserIdAsync. C
(C D
intD G
userIdH N
)N O
{ 	
return 
await 
_context !
.! "
Tasks" '
.' (
Where( -
(- .
t. /
=>0 2
t3 4
.4 5
UserId5 ;
==< >
userId? E
)E F
.F G
ToListAsyncG R
(R S
)S T
;T U
} 	
public 
async 
Task 
AddTaskAsync &
(& '
Tasks' ,
task- 1
)1 2
{ 	
await 
_context 
. 
Tasks  
.  !
AddAsync! )
() *
task* .
). /
;/ 0
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
async 
Task 
UpdateTaskAsync )
() *
Tasks* /
task0 4
)4 5
{ 	
_context   
.   
Tasks   
.   
Update   !
(  ! "
task  " &
)  & '
;  ' (
await!! 
_context!! 
.!! 
SaveChangesAsync!! +
(!!+ ,
)!!, -
;!!- .
}"" 	
public%% 
async%% 
Task%% 
DeleteTaskAsync%% )
(%%) *
int%%* -
id%%. 0
)%%0 1
{&& 	
var'' 
task'' 
='' 
await'' 
_context'' %
.''% &
Tasks''& +
.''+ ,
	FindAsync'', 5
(''5 6
id''6 8
)''8 9
;''9 :
if(( 
((( 
task(( 
!=(( 
null(( 
)(( 
{)) 
_context** 
.** 
Tasks** 
.** 
Remove** %
(**% &
task**& *
)*** +
;**+ ,
await++ 
_context++ 
.++ 
SaveChangesAsync++ /
(++/ 0
)++0 1
;++1 2
},, 
}-- 	
public// 
Task// 
<// 
Tasks// 
>// 
GetTaskByIdAsync// +
(//+ ,
int//, /
id//0 2
)//2 3
{00 	
throw11 
new11 #
NotImplementedException11 -
(11- .
)11. /
;11/ 0
}22 	
}33 
}44 ¥
MC:\git\TaskManagementSystem\src\Infra\Database\Repositories\UserRepository.cs
	namespace 	
Infra
 
. 
Database 
. 
Repositories %
{ 
[		 #
ExcludeFromCodeCoverage		 
]		 
public

 

class

 
UserRepository

 
:

  !
IUserRepository

" 1
{ 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public 
UserRepository 
(  
ApplicationDbContext 2
context3 :
): ;
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
AddUserAsync &
(& '
User' +
user, 0
)0 1
{ 	
await 
_context 
. 
Users  
.  !
AddAsync! )
() *
user* .
). /
;/ 0
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
User 
> 
GetUserByIdAsync  0
(0 1
int1 4
id5 7
)7 8
{ 	
return 
await 
_context !
.! "
Users" '
.' (
	FindAsync( 1
(1 2
id2 4
)4 5
;5 6
} 	
public 
async 
Task 
< 
User 
> 
GetUserByEmailAsync  3
(3 4
string4 :
email; @
)@ A
{ 	
return   
await   
_context   !
.  ! "
Users  " '
.  ' (
FirstOrDefaultAsync  ( ;
(  ; <
u  < =
=>  > @
u  A B
.  B C
Email  C H
==  I K
email  L Q
)  Q R
;  R S
}!! 	
}## 
}$$ 